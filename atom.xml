<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无邪の博客</title>
  
  
  <link href="https://amazingdl.github.io/atom.xml" rel="self"/>
  
  <link href="https://amazingdl.github.io/"/>
  <updated>2020-11-05T01:54:34.332Z</updated>
  <id>https://amazingdl.github.io/</id>
  
  <author>
    <name>AmazingDL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构(二)——栈和队列</title>
    <link href="https://amazingdl.github.io/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <id>https://amazingdl.github.io/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</id>
    <published>2020-10-28T00:50:50.000Z</published>
    <updated>2020-11-05T01:54:34.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、栈"><a href="#一、栈" class="headerlink" title="一、栈"></a>一、栈</h2><blockquote><p>什么是栈？</p></blockquote><p><strong>栈</strong>是限定仅在表尾进行插入或删除操作的线性表。因此，对于栈来说，表尾端被称为<strong>栈顶</strong>，表头端被称为<strong>栈底</strong>，不含元素的空表称为<strong>空栈</strong>。</p><p>在栈中，出栈的第一个元素是栈顶元素，即栈的修改是按后进先出的原则进行的，因此栈又称为后进先出的线性表。</p><p>其结构示意图如下：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image01.jpg"></p><blockquote><p>顺序栈的表示和实现</p></blockquote><p>和线性表类似，栈也有两种存储表示方法：顺序栈和链栈。</p><p>顺序栈，即栈的顺序存储结构是利用一组地址连续的存储单元依次存放自栈底到栈顶的数据元素，同时附设指针top指示栈顶元素在顺序栈中的位置。</p><p>其结构实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stack</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object[] data;<span class="comment">//存储栈内容的数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> top;<span class="comment">//栈顶指针</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> base;<span class="comment">//栈底指针</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;<span class="comment">//栈的元素个数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>data用于存放栈的元素，当data数组长度不够时，需要扩容；</li><li>base是指向栈底的下标，top是指向栈顶的下标，非空栈的栈顶指针始终在栈顶元素的下一个位置上；</li><li>元素每次入栈时，top需要自增1，base不需改变；</li><li>元素每次出栈时，top需要自减1，当top与base相等时，栈为空；</li></ol><p>栈的入栈示意图：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image02.jpg"></p><p>实现代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 顺序栈</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SequenceStack</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Object[] elementData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> base;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_LENGTH = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建默认长度的栈</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SequenceStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>(DEFAULT_LENGTH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建指定长度的栈</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SequenceStack</span><span class="params">(<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">elementData = <span class="keyword">new</span> Object[length];</span><br><span class="line">base = <span class="number">0</span>;</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line">size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 入栈，如果栈满就提醒栈满，无法扩容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(top!=elementData.length) &#123;</span><br><span class="line">elementData[top] = data;</span><br><span class="line">top++;</span><br><span class="line">size++;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;栈满，无法添加&quot;</span>+data+<span class="string">&quot;元素了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 出栈</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(top==base) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;栈空，没有元素出栈&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Object result = elementData[--top];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 元素个数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否为空</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.base==<span class="keyword">this</span>.top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="keyword">this</span>.size;i++) &#123;</span><br><span class="line">System.out.print(elementData[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>链栈的表示</p></blockquote><p>链栈，与顺序栈的操作类似，指示栈的每个元素使用一个结点表示，结点之间的操作与单链表的操作类似；</p><p>栈顶指针指向栈顶结点，不设置栈底指针，当栈顶指针为null时，栈为空，第一个元素入栈时，创建一个结点，且栈顶指针指向该结点；</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image03.jpg"></p><p>链栈的删除元素示意图：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image04.jpg"></p><p>链栈的代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedStack</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> StackNode  top;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkedStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">StackNode node = <span class="keyword">new</span> StackNode();</span><br><span class="line">node.data = data;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当栈为空栈时，第一个入栈的元素即为栈顶元素</span></span><br><span class="line"><span class="keyword">if</span>(top == <span class="keyword">null</span>) &#123;</span><br><span class="line">node.prev = <span class="keyword">null</span>;</span><br><span class="line">top = node;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">node.prev = top;</span><br><span class="line">top = node;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(top==<span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;栈空&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">StackNode result = top;</span><br><span class="line"></span><br><span class="line">top = top.prev;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.top==<span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//略</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StackNode</span></span>&#123;</span><br><span class="line"></span><br><span class="line">Object data;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每个结点的指针域指向前一个结点，栈底结点的指针域为null</span></span><br><span class="line">StackNode prev;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、栈的相关案例"><a href="#二、栈的相关案例" class="headerlink" title="二、栈的相关案例"></a>二、栈的相关案例</h2><p>通过栈实现十进制数N和其他进制数之间的转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.print(<span class="string">&quot;请输入一个十进制整数：&quot;</span>);</span><br><span class="line">    Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">int</span> number = scan.nextInt();</span><br><span class="line">    System.out.print(<span class="string">&quot;请输入要转换的进制：&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> n = scan.nextInt();</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;将十进制数&quot;</span>+number+<span class="string">&quot;转换为&quot;</span>+n+<span class="string">&quot;进制数&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    LinkedStack stack = <span class="keyword">new</span> LinkedStack();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(number&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//每次取余</span></span><br><span class="line">        stack.push(<span class="keyword">new</span> Integer(number%n));</span><br><span class="line">        <span class="comment">//将商继续进行转换</span></span><br><span class="line">        number = number/n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历栈</span></span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">while</span>(!stack.isEmpty()) &#123;</span><br><span class="line">        sb.append(stack.pop());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(sb.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、队列"><a href="#三、队列" class="headerlink" title="三、队列"></a>三、队列</h2><blockquote><p>什么是队列？</p></blockquote><p>和栈相反，<strong>队列</strong>是一种先进先出的线性表，它只允许在表的一端进行元素插入操作，而在另一端进行元素的删除操作。</p><p>与现实生活中的排队一致，最早进入队列的元素最早离开，即先进先出。</p><p>在队列中，允许插入的一端叫做<strong>队尾</strong>，允许删除的一端则成为<strong>队头</strong>。</p><p>队列结构示意图：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image05.png"></p><blockquote><p>链队列的表示和实现</p></blockquote><p>用链表表示的队列称为<strong>链队列</strong>，一个链队列显然需要两个分别指向队头和队尾的指针才能唯一确定。</p><p>在设计队列时，也可给链队列添加一个头结点，并令头指针指向头结点，由此，空的链队列的判断条件就是头指针和尾指针均指向头结点。</p><p>链队列结构示意图：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image06.jpg"></p><p>链队列的代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 链队列</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> QueueNode front;<span class="comment">//队首</span></span><br><span class="line"><span class="keyword">private</span> QueueNode rear;<span class="comment">//队尾</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size;<span class="comment">//元素个数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkedQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.front = <span class="keyword">new</span> QueueNode();<span class="comment">//头结点，不存储任何元素</span></span><br><span class="line"><span class="keyword">this</span>.rear = <span class="keyword">this</span>.front;<span class="comment">//空队列，队首指针和队尾指针均指向头结点</span></span><br><span class="line">        <span class="keyword">this</span>.size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//入队</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">QueueNode node = <span class="keyword">new</span> QueueNode();</span><br><span class="line">node.data = data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.rear.next = node;</span><br><span class="line"><span class="keyword">this</span>.rear = node;</span><br><span class="line"><span class="keyword">this</span>.size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//出队</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">DeQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Object result = <span class="keyword">this</span>.front.next.data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.front = <span class="keyword">this</span>.front.next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.size--;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.rear == <span class="keyword">this</span>.front;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueNode</span> </span>&#123;</span><br><span class="line">Object data;</span><br><span class="line">QueueNode next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>循环队列——队列的顺序表示和实现</p></blockquote><p>与顺序栈类似，在队列的顺序存储结构中，除了用一组地址连续的存储单元依次存放从队列头到队列为的元素之外，还需设置front和rear分别指向队列头元素及队列尾元素的位置。</p><p>在顺序队列的表示中，为了方便起见，初始化建空队列时，令front=rear=0。</p><p>每当插入新的队尾元素时，尾指针自增1；每当删除队列头元素时，头指针自增1。</p><p>因此，在非空队列中，头指针始终只想队列头元素，而尾指针始终指向队列尾元素的下一个位置。</p><p>队列表示示意图：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image07.png"></p><p>在顺序队列中，当队尾指针等于数组长度时，继续插入元素就会出现数组越界异常，然而此时又不宜如顺序栈那样，进行存储在分配扩大数组空间，因为队列的实际可用空间并未占满。</p><p><strong>循环队列</strong>：将顺序队列臆造为一个环状空间，如下图所示：</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image09.jpg"></p><p>由于队列的特殊结构，队列的长度一般都是可以确定的，在循环队列下亦是如此。</p><p>所以判断一个队列空间是空还是满就很重要了，当队列满了的时候，就告诉外界无法添加元素。</p><p>在元素入列或元素出列时，front和rear都是在不断增加的，但队列的长度时固定的，所以可通过(front+1)%size和(rear+1)%size的方式获取入列元素和出列元素在数组中的下标。</p><p>然而在循环队列中，只通过front==rear是无法判断一个队列空间是空还是满。</p><p>此时有两种处理方法：</p><p>其一是另设一个标识位以区分队列是空还是满；</p><p><img src="%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/image08.jpg"></p><p>其二是少用一个空间元素，约定以“队列头指针在队列尾指针的下一位置上作为队列呈满状态的标志。</p><p>循环队列的代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 循环队列</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SequenceQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Object[] elementData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> rear;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_LENGTH = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SequenceQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>(DEFAULT_LENGTH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SequenceQueue</span><span class="params">(<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">elementData = <span class="keyword">new</span> Object[length];</span><br><span class="line"><span class="keyword">this</span>.front = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>.rear = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>.size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断队列是否已满</span></span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">this</span>.rear+<span class="number">1</span>) % <span class="keyword">this</span>.elementData.length  == <span class="keyword">this</span>.front) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;队列已满&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">elementData[<span class="keyword">this</span>.rear] = data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.size++;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当rear等于elementData.length-1时，需要对其加一后的数值进行处理，即通过取余，使得0&lt;=rear&lt;=elementData.length</span></span><br><span class="line"><span class="keyword">this</span>.rear = (<span class="keyword">this</span>.rear+<span class="number">1</span>) % <span class="keyword">this</span>.elementData.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">DeQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断队列是否为空</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.front == <span class="keyword">this</span>.rear) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;队列为空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Object result = <span class="keyword">this</span>.elementData[<span class="keyword">this</span>.front];</span><br><span class="line"></span><br><span class="line"><span class="comment">//当front等于elementData.length-1时，需要对其加一后的数值进行处理，即通过取余，使得0&lt;=front&lt;=elementData.length</span></span><br><span class="line"><span class="keyword">this</span>.front = (<span class="keyword">this</span>.front+<span class="number">1</span>) % <span class="keyword">this</span>.elementData.length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.size;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、结束语"><a href="#四、结束语" class="headerlink" title="四、结束语"></a>四、结束语</h2><ol><li>在线性结构中，栈和队列的操作还是比较简单的，元素的增加和删除只能从某一端进行；</li><li>通过栈和队列的顺序存储结构和链式存储结构的实现，可以简单的认识一下这种特殊的线性结构。</li></ol>]]></content>
    
    
    <summary type="html">栈和队列是两种重要的线性结构。从数据结构角度来看，湛河队列也是线性表，其特殊性在于栈和队列的基本操作是线性表操作的子集；但从数据类型角度来看，它们是和线性表大不相同的两类重要的抽象数据类型。</summary>
    
    
    
    <category term="数据结构" scheme="https://amazingdl.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="线性结构" scheme="https://amazingdl.github.io/tags/%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构(一)——线性表</title>
    <link href="https://amazingdl.github.io/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <id>https://amazingdl.github.io/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/</id>
    <published>2020-10-28T00:43:19.000Z</published>
    <updated>2020-11-03T01:31:19.161Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、数据结构和算法"><a href="#一、数据结构和算法" class="headerlink" title="一、数据结构和算法"></a>一、数据结构和算法</h2><blockquote><p>谈数据结构之前，先认识一下几个相关的概念：</p></blockquote><p><strong>数据</strong>：是对客观事物的符号表示，在计算机科学中是指所有能输入到计算机中并被计算机程序处理的符号的总称。</p><p>对于计算机而言，数据的含义极为广泛，如图像、声音等都可以通过编码而归于数据的范畴。</p><p><strong>数据元素</strong>：是数据的基本单位，在计算机程序中通常作为一个整体进行考虑和处理。有时，一个数据元素可由若干个数据项组成。</p><p>例如一个人的详细信息为一个数据元素，那么这个人的身高、年龄、性别都是一个数据项。</p><p><strong>数据对象</strong>：是性质相同的数据元素的集合，是一个数据的子集。</p><p>例如，字母字符数据对象是集合C={‘A’,’B’,……,’Z’}。</p><blockquote><p>那么什么是数据结构呢？</p></blockquote><p><strong>数据结构</strong>是相互之间存在一种或多种特定关系的数据元素的集合。</p><p>在任何问题中，数据元素都不是孤立存在的；</p><p>比如当我们取银行办理业务时，需要排队，此时每个需要办理业务的人对于某个窗口来说都是一个数据元素，这些人之间也存在着某种特定的关系，例如每个人只能从队列的末尾进，从队首出，且除了第一个人，其他每个人的前面都有且只有一个需要办理业务的人，这就是线性结构的一种特点，当然这种线性结构还存在着其他关系，这些数据元素相互之间的关系成为结构。</p><p><strong>数据结构的四种分类</strong>：</p><ol><li>集合：结构中的数据元素之间除了“同属于一个集合”的关系之外，别无其他关系；</li><li>线性结构：结构中的数据元素之间存在一个对一个的关系；</li><li>树形结构：结构中的数据元素之间存在一个对多个的关系；</li><li>图形结构或网状结构：结构中的数据元素之间存在多个对多个的关系。</li></ol><blockquote><p>数据结构的相关概念</p></blockquote><p><strong>逻辑结构</strong>：结构定义中的“关系”描述的是数据元素之间的逻辑关系；</p><p><strong>物理结构</strong>：数据结构在计算机上的实成为物理结构；</p><p><strong>元素或节点</strong>：在计算机中，我们可以用一个由若干位组合起来形成的一维串表示一个数据元素，这个位串成为元素或节点。当数据元素由若干数据项组成时，位串中对应于各个数据项的子位串称为数据域。</p><p><strong>顺序存储结构</strong>：顺序存储结构的特点是借助元素在存储器中的<code>相对位置</code>来表示数据元素之间的逻辑关系，比如数组。</p><p><strong>链式存储结构</strong>：链式存储结构的特点就是借助指向元素存储地址的<code>引用(或指针)</code>表示数据元素之间的逻辑关系。</p><blockquote><p>数据类型</p></blockquote><p>在高级程序语言的编写中，每个变量都有一个它所属的确定的数据类型，类型明显或隐含地规定了在程序执行期间变量所有可能取值的范围，以及在这些值上允许进行的操作。</p><p>因此<strong>数据类型</strong>是一个值的集合和定义在这个值上的一组操作的总称。比如整型变量，其值就是整数的集合，定义在其上的操作为加、减、乘、除等操作。</p><p><strong>原子数据类型</strong>：原子类型的值是不可分解的，比如Java中的基本数据类型int、char、double等。</p><p><strong>结构数据类型</strong>：结构类型的值是由若干成分按某种结构组成，因此是可以分解的，且它的成分可以是非结构的，也可以是结构的。比如数组，数组的元素可以int类型的，也可以是数组类型的(构成二维数组)。</p><blockquote><p>抽象数据类型</p></blockquote><p><strong>抽象数据类型</strong>是指一个数据模型以及定义在该模型上的一组操作，抽象数据类型的定义取决于它的一组逻辑特性，而与其在计算机内部如何表示和实现无关，即不论其内部结构如何变化，只要它的数学特性不变，都不影响其外部的使用。</p><p>抽象数据类型格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ADT 抽象数据类型名&#123;</span><br><span class="line">数据对象:&lt;数据对象的定义&gt;</span><br><span class="line">数据关系:&lt;数据关系的定义&gt;</span><br><span class="line">基本操作:&lt;基本操作的定义&gt;</span><br><span class="line">&#125;ADT 抽象数据类型名</span><br></pre></td></tr></table></figure><blockquote><p>算法</p></blockquote><p><strong>算法</strong>是对特定问题求解步骤的一种描述，它是指令的有限集合，其中一条指令表示一个或多个操作；</p><p>算法的五个特性：</p><ul><li><strong>有穷性</strong>：一个算法必须总是在执行有穷步后结束，且每一步都可在有穷时间内完成；</li><li><strong>确定性</strong>：算法中每一条指令必须有确切的含义，读者理解时不会产生二义性。并且，在任何条件下，算法只有唯一的一条执行路径，即对于相同的输入只能得出相同的输出；</li><li><strong>可行性</strong>：一个算法是能行的，计算法中描述的操作都是可以通过实现的基本运算执行有限次来实现的；</li><li><strong>输入</strong>：一个算法有零个或多个输入，这些输入取自于某个特定的对象的集合；</li><li><strong>输出</strong>：一个算法有一个或多个输出，这些输出是同输入有着某些特定关系的量。</li></ul><p>通常通过一个算法的<code>时间复杂度</code>和<code>空间复杂度</code>来描述一个算法的效率。</p><h2 id="二、线性表的类型定义"><a href="#二、线性表的类型定义" class="headerlink" title="二、线性表的类型定义"></a>二、线性表的类型定义</h2><blockquote><p>线性结构的特点</p></blockquote><p>在数据元素的非空有限集合中</p><ul><li>存在唯一的一个被称做“第一个”的数据元素；</li><li>存在唯一的一个被称做“最后一个”的数据元素；</li><li>除第一个之外，集合中的每个数据元素均只有一个前驱；</li><li>除最后一个之外，集合中的每个数据元素均只有一个后继。</li></ul><p>如果把食堂排队打饭的每个人看做一个数据元素，那么排队的这些人构成的集合属于线性结构。</p><blockquote><p>什么是线性表</p></blockquote><ul><li><p>线性表属于线性结构中的一种最常用且最简单的数据结构。</p></li><li><p>线性表中的每个数据元素的具体含义，在不同的情况下各不相同，他可以是一个数或一个符号，也可以是一页书，甚至更复杂的信息。</p></li><li><p>线性表中的数据元素可以是各种各样的，但同一线性表中的数据元素必定具有相同特性。</p></li></ul><p>另外，对于具有“一对一”逻辑关系的数据，我们一直在用“某一元素的左侧（前边）或右侧（后边）”这样不专业的词，其实线性表中有更准确的术语：</p><ul><li>某一元素的左侧相邻元素称为“直接前驱”，位于此元素左侧的所有元素都统称为“前驱元素”；</li><li>某一元素的右侧相邻元素称为“直接后继”，位于此元素右侧的所有元素都统称为“后继元素”；</li></ul><blockquote><p>常用算法</p></blockquote><p>①将存在于A表而不存在于B表的数据元素插入到表A中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">3</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">18</span>,<span class="number">25</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] result = Arrays.copyOf(arr2, arr1.length+arr2.length);<span class="comment">//复制并扩容数组2。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">//记录插入的元素个数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i&lt;arr1.length;i++) &#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;arr2.length;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr1[i]==arr2[j]) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;<span class="comment">//存在相同元素</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!flag) &#123;</span><br><span class="line">            result[arr2.length+count]=arr1[i];</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;(arr2.length+count);i++) &#123;</span><br><span class="line">        System.out.print(result[i]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②已知线性表A和B中的数据元素按值非递减有序排列，现要求A和B合并为一个新的线性表C，且C的数据元素仍按值非递减有序排列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 合并两个有序数组到另外一个数组中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeList</span><span class="params">(<span class="keyword">int</span>[] a,<span class="keyword">int</span>[] b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[a.length+b.length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>;<span class="comment">//记录数组a的下标</span></span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">0</span>;<span class="comment">//记录数组b的下标</span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;<span class="comment">//记录数组c的下标</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(x&lt;a.length &amp;&amp; y &lt; b.length) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[x]&lt;=b[y]) &#123;</span><br><span class="line">            c[k++] = a[x++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            c[k++] = b[y++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此时还需要判断两个数组是否已经全部遍历完</span></span><br><span class="line">    <span class="keyword">while</span>(x&lt;a.length) &#123;</span><br><span class="line">        c[k++] = a[x++];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(y&lt;b.length) &#123;</span><br><span class="line">        c[k++] = b[y++];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(Arrays.toString(c));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、顺序表"><a href="#三、顺序表" class="headerlink" title="三、顺序表"></a>三、顺序表</h2><p>线性表的顺序表示指的是一组地址连续的存储单元依次存储线性表的数据元素。</p><p>以下是我参照java.util.ArrayList类，写出的一个简单的List，只包含一些简单的增删改查方法；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现自己的ArrayList，未使用泛型，使用Object存储元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayList</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//容器</span></span><br><span class="line"><span class="keyword">private</span> Object[] elementData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认数组长度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_LENGTH= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//元素个数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">elementData = <span class="keyword">new</span> Object[<span class="keyword">this</span>.DEFAULT_LENGTH];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(length&lt;<span class="number">0</span>) &#123;</span><br><span class="line">elementData = <span class="keyword">new</span> Object[<span class="keyword">this</span>.DEFAULT_LENGTH];</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(length&gt;Integer.MAX_VALUE) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;数组长度异常&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">elementData = <span class="keyword">new</span> Object[length];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组扩容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> minCapacity 扩容后的最小长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(minCapacity&gt;Integer.MAX_VALUE) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;数组长度异常&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line"><span class="comment">//扩容1.5倍</span></span><br><span class="line"><span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断扩容1.5倍后的大小是否仍能够满足需求</span></span><br><span class="line"><span class="keyword">if</span>(newCapacity-minCapacity&lt;<span class="number">0</span>) &#123;</span><br><span class="line">newCapacity = minCapacity;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 指定索引下插入元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index 插入的位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> target 需要插入的元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index,Object target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入的元素的下标只能小于elementData.length且大于0，即列表的元素是连续的</span></span><br><span class="line"><span class="keyword">if</span>(index&lt;<span class="number">0</span>||index&gt;=elementData.length) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下标越界&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当元素个数等于数组长度时，数组扩容</span></span><br><span class="line"><span class="keyword">if</span>((<span class="keyword">this</span>.size+<span class="number">1</span>)&gt;=elementData.length) &#123;</span><br><span class="line"><span class="keyword">this</span>.grow(<span class="keyword">this</span>.size+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当插入的索引等于size时，需移动元素，然后在index位置插入元素</span></span><br><span class="line"><span class="keyword">if</span>(index!=<span class="keyword">this</span>.size) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="keyword">this</span>.size;i&gt;=index;i--) &#123;</span><br><span class="line">elementData[i] = elementData[i-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当插入的索引等于size时，无需移动元素</span></span><br><span class="line">elementData[index]=target;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.updateSize();<span class="comment">//更新元素个数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除指定索引下的元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.get(index)!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = index;i&lt;<span class="keyword">this</span>.size;i++) &#123;</span><br><span class="line">elementData[i] = elementData[i+<span class="number">1</span>];<span class="comment">//先赋值，后自增</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.updateSize();<span class="comment">//更新元素个数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.get(index);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index,Object target)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.get(index)!=<span class="keyword">null</span>) &#123;</span><br><span class="line">elementData[index] = target;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下标错误&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据索引查找元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &lt;<span class="number">0</span> || index &gt;=<span class="keyword">this</span>.size) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> elementData[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//元素个数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新元素个数</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="keyword">this</span>.elementData.length;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(elementData[i]!=<span class="keyword">null</span>) &#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.size = count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 没有元素即为空，返回true</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.size()==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="keyword">this</span>.size;i++) &#123;</span><br><span class="line">result.append(elementData[i].toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、单链表"><a href="#四、单链表" class="headerlink" title="四、单链表"></a>四、单链表</h2><p>与顺序存储结构不同的是，它不要求逻辑上相邻的元素在物理位置也相邻。因此对于链式存储结构的操作，增加和删除就不需要移动元素，但是每次查询和修改都需要遍历整个链式存储结构</p><blockquote><p>线性链表</p></blockquote><p>线性表的链式存储结构的特点是用一组任意的存储单元存储线性表的数据元素（这组存储单元可以是连续的，也可以是不连续的）。</p><p>为了表示每个数据元素与其直接后继元素之间的逻辑关系，每个数据元素除了存储本身的信息之外，还需存储一个指示其直接后继的信息，即直接后继的存储位置；这两部分信息组成数据元素的存储结构，称为<code>结点</code>。</p><p>结点中存储数据元素信息的域称为<code>数据域</code>，存储直接后继存储位置的域称为<code>指针域</code>。</p><p>链表的每个结点中只包含一个指针域，称为<strong>单链表</strong>。</p><p>单链表的结构如下图：</p><p><img src="/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/image01.png"></p><p><strong>头结点</strong>：单链表的第一个结点之前附设一个结点，称之为头结点；</p><p>头结点的数据域可以不存储任何信息，也可存储如线性表的长度等附加信息；</p><p>头结点的指针域存储的是头指针，指示链表的第一个结点的存储位置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Node first;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Node last;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.first = <span class="keyword">new</span> Node();</span><br><span class="line"><span class="keyword">this</span>.last = first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 列表末尾增加元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> data 元素的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建结点</span></span><br><span class="line">Node element = <span class="keyword">new</span> Node();</span><br><span class="line">element.data = data;</span><br><span class="line"></span><br><span class="line">Node node = <span class="keyword">this</span>.first;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取最后一个结点，此时只要结点的next为null，该结点即为最后一个结点。</span></span><br><span class="line"><span class="keyword">while</span>(node.next!=<span class="keyword">null</span>) &#123;</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node.next = element;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.last = element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 指定位置插入元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> index 索引；在列表中，索引从0开始，索引为0的表示头结点，</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> data 元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> index,<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;无法在头结点添加元素&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &gt; <span class="keyword">this</span>.size()+<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下标越界&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建结点</span></span><br><span class="line">Node element = <span class="keyword">new</span> Node();</span><br><span class="line">element.data = data;</span><br><span class="line"></span><br><span class="line"><span class="comment">//索引比列表元素个数大1时，即在链表的末尾添加元素，直接调用add方法</span></span><br><span class="line"><span class="keyword">if</span>(index == <span class="keyword">this</span>.size()+<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.add(data);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取插入位置元素的前驱元素</span></span><br><span class="line">Node node = <span class="keyword">this</span>.getIndexPriorElement(index);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;插入位置的前驱元素内容&quot;</span>+node.data);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将element的next指向插入位置的元素</span></span><br><span class="line">element.next = node.next;</span><br><span class="line"><span class="comment">//将前驱元素的next指向element</span></span><br><span class="line">node.next = element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;无法删除头结点&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下标越界&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取删除位置元素的前驱元素</span></span><br><span class="line">Node node = <span class="keyword">this</span>.getIndexPriorElement(index);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> result = node.next.data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index == <span class="keyword">this</span>.size()) &#123;</span><br><span class="line">node.next = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">this</span>.last = node;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">node.next = node.next.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index,<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;无法更新头结点元素&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下标越界&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取修改位置元素</span></span><br><span class="line">Node node = <span class="keyword">this</span>.getIndexPriorElement(index).next;</span><br><span class="line"></span><br><span class="line">node.data = value;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;无法获取头结点数据&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下标越界&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取修改位置元素</span></span><br><span class="line">Node node = <span class="keyword">this</span>.getIndexPriorElement(index).next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> node.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//元素个数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//头结点不包含元素</span></span><br><span class="line">Node node = <span class="keyword">this</span>.first.next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下一个结点为空时，循环结束</span></span><br><span class="line"><span class="keyword">while</span>(node!=<span class="keyword">null</span>) &#123;</span><br><span class="line">size++;</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.first.next==<span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历链表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//从第二个结点开始遍历，头结点不包含元素</span></span><br><span class="line">Node node = <span class="keyword">this</span>.first.next;</span><br><span class="line"><span class="keyword">while</span>(node!=<span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.print(node.data+<span class="string">&quot; &quot;</span>);</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 找到指定索引位置的前驱元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">getIndexPriorElement</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;头结点没有前驱元素&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">Node node = <span class="keyword">this</span>.first;</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到插入位置元素及其前驱元素</span></span><br><span class="line"><span class="keyword">while</span>(node.next.next!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(count == index) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取头结点</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">head</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">firstElement</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.first.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getFirstElementValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.first.next.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">last</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.last;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getLastElementValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.last.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节点类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line">Node next;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(Node next)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>索引问题，上述案例中头结点的索引为0，第一个存储的元素的索引为1；</li><li>元素个数问题，对于元素个数可直接在类中添加size属性，只需在链表元素个数变化更新时即可，不用每次调用size方法就遍历整个链表，且size方法返回的是链表元素的个数，不是链表的结点数量；</li><li>节点数据域，数据域存储的信息可以是任何类型的，比如double、char、boolean等类型，也可是一个自定义类，甚至是一个链表；所以在设置节点的数据域时，可使用Object类型，也可以使用泛型提高代码重用性。</li><li>first属性表示第一个结点，即头结点；last属性表示最后一个结点。</li></ol><h2 id="五、双向链表"><a href="#五、双向链表" class="headerlink" title="五、双向链表"></a>五、双向链表</h2><p>双向链表的结点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DNode</span></span>&#123;</span><br><span class="line">    Object data;<span class="comment">//数据信息</span></span><br><span class="line">    DNode prev;<span class="comment">//直接前驱元素</span></span><br><span class="line">    DNode next;<span class="comment">//直接后继元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>双向链表</strong>：双向链表的结点包含两个指针域，其一指向直接后继，其一指向直接前驱，通过这种方式，可使指针在链表上的移动更加方便，但也使用了更多的内存空间。</p><p>结构如下图</p><p><img src="/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/image04.png"></p><p>代码实现如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 双向链表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> AmazingDL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DuplexLinkedList</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> DNode head;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化链表，创建头结点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DuplexLinkedList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">head = <span class="keyword">new</span> DNode();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//增加元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line"><span class="comment">//构建结点</span></span><br><span class="line">DNode element = <span class="keyword">new</span> DNode();</span><br><span class="line">element.data = data;</span><br><span class="line"></span><br><span class="line">DNode node = head;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(node.next!=<span class="keyword">null</span>) &#123;</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node.next = element;</span><br><span class="line">element.prior = node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> index,String vlaue)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &lt;= <span class="number">0</span> || index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;索引不合法&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构建结点</span></span><br><span class="line">DNode element = <span class="keyword">new</span> DNode();</span><br><span class="line">element.data = vlaue;</span><br><span class="line"></span><br><span class="line">DNode node = <span class="keyword">this</span>.getNodeByIndex(index);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取直接前驱元素</span></span><br><span class="line">DNode priorNode = node.prior;</span><br><span class="line"></span><br><span class="line">element.next = node;</span><br><span class="line">node.prior = element;</span><br><span class="line"></span><br><span class="line">priorNode.next = element;</span><br><span class="line">element.prior = priorNode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &lt;= <span class="number">0</span> || index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;索引不合法&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DNode node = <span class="keyword">this</span>.getNodeByIndex(index);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取直接前驱元素</span></span><br><span class="line">DNode priorNode = node.prior;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取直接后继元素</span></span><br><span class="line">DNode nextNode = node.next;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除元素</span></span><br><span class="line">priorNode.next = nextNode;</span><br><span class="line">nextNode.prior = priorNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> node.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> index,String value)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &lt;= <span class="number">0</span> || index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;索引不合法&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DNode node = <span class="keyword">this</span>.getNodeByIndex(index);</span><br><span class="line">node.data = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index &lt;= <span class="number">0</span> || index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;索引不合法&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.getNodeByIndex(index).data;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//元素个数，头结点不算一个元素</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">DNode node = head.next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(node!=<span class="keyword">null</span>) &#123;</span><br><span class="line">size++;</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> head.next==<span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">DNode node = head.next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(node!=<span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.print(node.data+<span class="string">&quot; &quot;</span>);</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println();<span class="comment">//换行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据索引获取指定位置结点</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DNode <span class="title">getNodeByIndex</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index &gt; <span class="keyword">this</span>.size()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;索引越界&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">DNode node = head.next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(node.next!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(count == index) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">node = node.next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DNode</span></span>&#123;</span><br><span class="line">String data;<span class="comment">//数据域</span></span><br><span class="line">DNode prior;<span class="comment">//直接前驱</span></span><br><span class="line">DNode next;<span class="comment">//直接后继</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> DNode <span class="title">getPrior</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> prior;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrior</span><span class="params">(DNode prior)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.prior = prior;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> DNode <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(DNode next)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ol><li>链表只设置了头结点属性，用于获取链表的其他任何结点；</li><li>由于每个结点都包含了prior属性，所以在插入和删除上操作更加简明。</li></ol><h2 id="六、静态链表与循环链表"><a href="#六、静态链表与循环链表" class="headerlink" title="六、静态链表与循环链表"></a>六、静态链表与循环链表</h2><blockquote><p>静态链表</p></blockquote><p>静态链表结点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">Object data;<span class="comment">//数据信息</span></span><br><span class="line">    <span class="keyword">int</span> cur;<span class="comment">//下一个结点的下标</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>什么是静态链表？就是借用顺序表存储带有指向下一个结点的“指针域”，这个“指针域”被称做游标，表示当前结点的直接后继结点的下标。通过下标可直接定位到直接后继结点。</p><p>通过使用这种结构，线性表的插入和删除就不需移动元素了，仅需要修改指针即可，但是数组仍然存在扩容问题，此时查询和修改可直接通过遍历数组即可。</p><p>此时逻辑上相邻的两个元素，物理上并不一定相邻。</p><p>具体的结果说明如下图：</p><p><img src="/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/image02.png"></p><p>说明：</p><ol><li>静态链表的存储与顺序表类似，数组的长度是固定的，当元素个数等于数组长度时，就需要扩容；</li><li>静态链表的插入和删除操作与单链表类似，查询和修改可简化为类似顺序表的操作。</li></ol><blockquote><p>循环链表</p></blockquote><p>循环链表是另一种形式的链式存储结构，它的特点是表中最后一个结点的指针域指向头结点，整个链表形成一个环；</p><p>通过这种结构，从表中任一结点出发均可找到表中其他结点。</p><p>其结构如下图</p><p><img src="/2020/10/28/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%BF%E6%80%A7%E8%A1%A8/image03.png"></p><p>说明：</p><ol><li>循环链表的操作和线性链表基本一致，差别仅在于算法中的循环条件不再试判断直接后继元素是否为null，而是判断是否等于头指针；</li><li>有时候，在循环链表中设立尾指针而不设头指针，可是某些操作简化，例如两个线性表的合并。</li></ol><h2 id="七、结束语"><a href="#七、结束语" class="headerlink" title="七、结束语"></a>七、结束语</h2><ol><li>数据结构是一门研究非数值计算的程序设计问题中计算的操作对象以及他们之间的关系和操作等的学科；</li><li>数据结构的学习我将从两方面记录，一个是数据结构的特点，一个就是针对这种数据结构的各种操作(增、删、改、查等)；</li><li>这篇博客是我对数据结构学习的记录，仅此而已；</li><li>本系列博客的参考书籍<a href="https://book.douban.com/subject/2162035/">https://book.douban.com/subject/2162035/</a> (《数据结构 C语言版》)。</li></ol>]]></content>
    
    
    <summary type="html">在数据元素的非空有限集合中，如果除了第一个数据元素和最后一个数据元素之外，每个数据元素只存在一个直接前驱元素和一个直接后继元素，那么这种数据结构就是线性结构；线性结构有很多，比如线性表、栈、队列等；现实生活中线性结构的案例也很多，比如食堂排队，所以学会线性结构的特点和操作是及其重要的。所以，这次就从线性表开始说起。</summary>
    
    
    
    <category term="数据结构" scheme="https://amazingdl.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="线性结构" scheme="https://amazingdl.github.io/tags/%E7%BA%BF%E6%80%A7%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch-分布式全文搜索引擎</title>
    <link href="https://amazingdl.github.io/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/"/>
    <id>https://amazingdl.github.io/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/</id>
    <published>2020-10-25T00:03:20.000Z</published>
    <updated>2020-10-27T00:03:59.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、搜索"><a href="#一、搜索" class="headerlink" title="一、搜索"></a>一、搜索</h2><h3 id="1-1-数据库搜索的问题"><a href="#1-1-数据库搜索的问题" class="headerlink" title="1.1 数据库搜索的问题"></a>1.1 数据库搜索的问题</h3><p>使用传统的数据库存储数据，那么会存在下述的问题：</p><p>在某些搜索业务场景下（如模糊搜索，海量数据搜索），效率极低,因为模糊搜索可能导致全表扫描。</p><p>而在海量数据下进行模糊搜索是企业中比较常见的业务需求  ， 所以只能通过全文搜索技术解决。</p><h3 id="1-2-什么是全文搜索"><a href="#1-2-什么是全文搜索" class="headerlink" title="1.2 什么是全文搜索"></a>1.2 什么是全文搜索</h3><p>全文检索是利用==<strong>倒排索引</strong>==技术对需要搜索的数据进行处理，然后提供快速匹配的技术。</p><p>其实全文检索还有另外一种专业定义，<strong>先创建索引然后对索引进行搜索的过程</strong>，就是全文检索。</p><h4 id="1-2-1-倒排索引"><a href="#1-2-1-倒排索引" class="headerlink" title="1.2.1 倒排索引"></a>1.2.1 倒排索引</h4><p>倒排索引是一种存储数据的方式，与传统查找有很大区别：</p><ul><li>传统查找：采用数据按行存储，查找时逐行扫描，或者根据索引查找，然后匹配搜索条件，效率较差。概括来讲是先找到文档，然后看是否匹配。查找一个10MB的word文档，大概需要3秒</li><li>倒排索引：首先对数据按列拆分存储，然后对文档中的数据分词，对词条进行索引，并记录词条在文档中出现的位置。这样查找时只要找到了词条，就找到了对应的文档。概括来讲是先找到词条，然后看看哪些文档包含这些词条。</li></ul><p>类似于生活中的字典，如果想要获取一个字的所有信息，可通过拼音或部首获取某个字的位置，然后直接在该位置获取目标的所有信息。</p><h4 id="1-2-2-搜索流程"><a href="#1-2-2-搜索流程" class="headerlink" title="1.2.2 搜索流程"></a>1.2.2 搜索流程</h4><ol><li>用户在搜索输入框输入相要搜索的内容，比如输入”华为手机“；</li><li>ElasticSearch获取搜索的信息并进行<code>分词</code>处理，会将输入的内容分词为”华为“和”手机“；</li><li>然后拿着这些拆分后的词去倒排索引列表中进行匹配，找到这些词对应的所有文档编号；</li><li>然后根据这些编号去文档列表中找到文档。</li></ol><h3 id="1-3-Lucene"><a href="#1-3-Lucene" class="headerlink" title="1.3 Lucene"></a>1.3 Lucene</h3><p>Lucene是免费开源用于全文检索的程序工具包（API），由Apache软件基金会支持和提供。目前主流的java搜索框架都是依赖Lucene，官网：<a href="http://lucene.apache.org/">http://lucene.apache.org</a></p><h2 id="二、分词器"><a href="#二、分词器" class="headerlink" title="二、分词器"></a>二、分词器</h2><p>Analyzer（分词器）的作用是把一段文本中的词按规则取出所包含的所有词</p><p>中文的分词比较复杂，因为不是一个字就是一个词，而且一个词在另外一个地方就可能不是一个词，如在“帽子和服装”中，“和服”就不是一个词。对于中文分词，通常有三种方式：单字分词、二分法分词、词典分词。</p><h3 id="2-1-单字分词"><a href="#2-1-单字分词" class="headerlink" title="2.1 单字分词"></a>2.1 单字分词</h3><p>就是按照中文一个字一个字地进行分词，效率比较低。如：“我们是中国人”，效果：“我”、“们”、“是”、“中”、“国”、“人”。（StandardAnalyzer就是这样）</p><h3 id="2-2-二分法分词"><a href="#2-2-二分法分词" class="headerlink" title="2.2 二分法分词"></a>2.2 二分法分词</h3><p>按两个字进行切分，把相邻的两个字组成词分解出来，效率也比较低。而且很多情况下分的词不对。如：“我们是中国人”，效果：“我们”、“们是”、“是中”、“中国”、“国人”。（CJKAnalyzer就是这样）</p><h3 id="2-3-词库分词-IKAnalyzer"><a href="#2-3-词库分词-IKAnalyzer" class="headerlink" title="2.3 词库分词(IKAnalyzer)"></a>2.3 词库分词(IKAnalyzer)</h3><p>按分词算法构造词，然后去匹配已建好的词库集合，如果匹配到就切分出来成为词语。通常词库分词被认为是最理想的中文分词算法。如：“我们是中国人”，效果为：“我们”、“中国人”，”中国”。（使用极易分词的MMAnalyzer。可以使用“极易分词”，或者是“庖丁分词”分词器、IKAnalyzer）。</p><p> 基本上可以把词全部分出来(经常用的分词器)</p><h3 id="2-4-停用词和扩展词"><a href="#2-4-停用词和扩展词" class="headerlink" title="2.4 停用词和扩展词"></a>2.4 停用词和扩展词</h3><p><strong>停用词</strong>：有些词在文本中出现的频率非常高。但对本文的语义产生不了多大的影响。例如英文的a、an、the、of等。或中文的”的、了、呢等”。这样的词称为停用词。停用词经常被过滤掉，不会被进行索引。在检索的过程中，如果用户的查询词中含有停用词，系统会自动过滤掉。停用词可以加快索引的速度，减少索引库文件的大小。</p><p><strong>扩展词</strong>：就是不想让哪些词被分开，让他们分成一个词。</p><blockquote><p>宏颜获水</p><p>我太难了</p><p>奥力给</p></blockquote><p>使用停用词和扩展词</p><p><strong>ext_stopword.dic</strong>为停用词的词库，词库里的词都被当作为停用词使用。</p><p><strong>ext_dict.dic</strong> 为扩用词的词库，词库里的词都被当作为扩用词使用</p><h2 id="三、ElasticSearch简介"><a href="#三、ElasticSearch简介" class="headerlink" title="三、ElasticSearch简介"></a>三、ElasticSearch简介</h2><h3 id="3-1-ElasticSearch概述"><a href="#3-1-ElasticSearch概述" class="headerlink" title="3.1 ElasticSearch概述"></a>3.1 ElasticSearch概述</h3><p>Elaticsearch，简称为es， es是一个开源的==<strong>高扩展的分布式全文检索引擎</strong>==，它可以近乎实时的检索数据；本身扩展性很好，可以扩展到上百台服务器，处理PB级别的数据。ES使用Java开发，Lucene作为其核心来实现所有索引和搜索的功能，但是它的<strong>目的是通过简单的RESTful API来隐藏Lucene的复杂性，从而让全文搜索变得简单。</strong></p><p>面对海量数据，想要根据一些关键词搜索到想要的信息，只通过关系型数据库的查询来获取，不仅效率是非常低的，而且准确性也很低。</p><p>目前市面上也常使用ElasticSearch作为搜索引擎，比如：百度使用ElasticSearch作为文本数据分析，新浪使用ES 分析处理32亿条实时日志，阿里使用ES 构建挖财自己的日志采集和分析体系。</p><p>通过搜索引擎来获取用户想要搜索的信息并返回给用户。</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image01.png"></p><h3 id="3-2-ElasticSearch的使用场景"><a href="#3-2-ElasticSearch的使用场景" class="headerlink" title="3.2 ElasticSearch的使用场景"></a>3.2 ElasticSearch的使用场景</h3><p>ES使用场景一般分为2种情况：</p><h4 id="3-2-1-已经上线的系统"><a href="#3-2-1-已经上线的系统" class="headerlink" title="3.2.1 已经上线的系统"></a>3.2.1 已经上线的系统</h4><p>模块搜索功能使用数据库查询实现，但是已经出现性能问题，或者不满足产品的高亮相关度排序需求时。这种情况就会对系统的查询功能进行技术改造，转而使用全文检索，而es就是首选。改造业务流程如图：</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image02.png"></p><h4 id="3-2-2-系统新增加的模块"><a href="#3-2-2-系统新增加的模块" class="headerlink" title="3.2.2 系统新增加的模块"></a>3.2.2 系统新增加的模块</h4><p>产品一开始就要实现高亮相关度排序等全文检索的功能。针对这种情况，企业实现功能业务流程如图：</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image03.png"></p><h3 id="3-3-相关软件的安装的安装"><a href="#3-3-相关软件的安装的安装" class="headerlink" title="3.3 相关软件的安装的安装"></a>3.3 相关软件的安装的安装</h3><h4 id="3-2-1-ElasticSearch的安装"><a href="#3-2-1-ElasticSearch的安装" class="headerlink" title="3.2.1 ElasticSearch的安装"></a>3.2.1 ElasticSearch的安装</h4><p>本篇博客使用6.8.0版本，而目前ElasticSearch已经更新7.9版本，但大部分内容是相同的。</p><p>环境建议使用JDK1.8及以上。</p><p>Elasticsearch分为Linux和Window版本，基于我们主要学习的是Elasticsearch的Java客户端的使用，所以我们课程中使用的是安装较为简便的Window版本，项目上线后，公司的运维人员会安装Linux版的ES供我们连接使用。</p><p>Elasticsearch的官方地址：<a href="https://www.elastic.co/cn/downloads/past-releases">https://www.elastic.co/cn/downloads/past-releases</a></p><p><a href="https://elasticsearch.cn/download/">ElasticSearch中文社区下载地址</a>关于ElasticSearch的东西都可以在这里下载。</p><p>下载完毕后，解压压缩包，并点击bin目录下的elasticsearch.bat启动启。</p><p>启动成功后，访问localhost:9200，并显示以下内容，则安装成功</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image04.png"></p><h4 id="3-2-2-集成IK分词器"><a href="#3-2-2-集成IK分词器" class="headerlink" title="3.2.2 集成IK分词器"></a><strong>3.2.2 集成IK分词器</strong></h4><p>将解压后的压缩包放在ElasticSearch的plugins中</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image08.png"></p><p><strong>测试</strong></p><p>IK分词器有两种分词模式：ik_max_word和ik_smart模式。</p><ul><li>ik_max_word：会将文本做最细粒度的拆分</li><li>ik_smart：会做最粗粒度的拆分，智能拆分</li></ul><p>通过发送请求：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请求方式：POST</span><br><span class="line">请求url：http://127.0.0.1:9200/_analyze</span><br><span class="line">请求体：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;南京市长江大桥&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最细粒度的拆分结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;南京市&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;南京&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;市长&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;市&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;长江大桥&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">4</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;长江&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">5</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;大桥&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">6</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>智能拆分结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;南京市&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;长江大桥&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>添加扩展词典和停用词典</strong></p><p><strong>停用词</strong>：有些词在文本中出现的频率非常高。但对本文的语义产生不了多大的影响。例如英文的a、an、the、of等。或中文的”的、了、呢等”。这样的词称为停用词。停用词经常被过滤掉，不会被进行索引。在检索的过程中，如果用户的查询词中含有停用词，系统会自动过滤掉。停用词可以加快索引的速度，减少索引库文件的大小。</p><p><strong>扩展词</strong>：就是不想让哪些词被分开，让他们分成一个词。比如上面的<strong>江大桥</strong></p><p><code>南京市长江大桥</code></p><p>南京市，长江大桥</p><p>南京，市长，江大桥</p><p>江大桥拆分出来，</p><p><strong>自定义扩展词库</strong></p><p>1、进入到ElasticSerach安装路径\plugins\elasticsearch-analysis-ik-6.8.0\config目录下, 新增自定义词典myext_dict.dic</p><p>输入 ：江大桥</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image09.png"></p><p>2、将我们自定义的扩展词典文件，配置到IKAnalyzer.cfg.xml文件中</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image10.png"></p><p>3、重启访问</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请求方式：POST</span><br><span class="line">请求url：http://127.0.0.1:9200/_analyze</span><br><span class="line">请求体：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;南京市长江大桥&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;南京市&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;市长&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;江大桥&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;start_offset&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;end_offset&quot;</span>: <span class="number">8</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;position&quot;</span>: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-3-安装ElasticSearch-head"><a href="#3-2-3-安装ElasticSearch-head" class="headerlink" title="3.2.3 安装ElasticSearch-head"></a>3.2.3 安装ElasticSearch-head</h4><p>ElasticSearch-head也是ElasticSearch的一个客户端，通过图形化界面对ElasticSearch进行相应的操作。</p><p>可在Chrome浏览器安装该插件，也可以下载相应的压缩包。</p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image05.png"></p><h4 id="3-2-4-kinaba的安装"><a href="#3-2-4-kinaba的安装" class="headerlink" title="3.2.4 kinaba的安装"></a>3.2.4 kinaba的安装</h4><p>Kibana是ElasticSearch的数据可视化和实时分析的工具，利用Elasticsearch的聚合功能，生成各种图表，如柱形图，线状图，饼图等。</p><p>下载完后解压</p><p><strong>配置</strong></p><p>1、进入安装目录下的config目录的kibana.yml文件</p><p>修改elasticsearch服务器的地址：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">elasticsearch.url:</span> <span class="string">&quot;http://localhost:9200&quot;</span></span><br></pre></td></tr></table></figure><p>2、修改kibana配置支持中文：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><p><strong>启动访问</strong></p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image06.png"></p><p><strong>常使用的功能</strong></p><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image07.png"></p><p>可在这里通过一些命令进行相应的操作。</p><h2 id="四、核心概念"><a href="#四、核心概念" class="headerlink" title="四、核心概念"></a>四、核心概念</h2><p>Elasticsearch是面向文档(document oriented)的，这意味着它可以存储整个对象或文档(document)。然而它不仅仅是存储，还会索引(index)每个文档的内容使之可以被搜索。在Elasticsearch中，你可以对文档（而非成行成列的数据）进行索引、搜索、排序、过滤。Elasticsearch比传统关系型数据库如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">索引库(indexes)-------------&gt;数据库(Databases)</span><br><span class="line">类型(type)------------------&gt;数据表(Table)</span><br><span class="line">文档(Document)--------------&gt;行(Row)</span><br><span class="line">字段(Field)-----------------&gt;列(Columns)</span><br><span class="line">映射(mappings)--------------&gt;DDL创建数据库表的语句</span><br></pre></td></tr></table></figure><p>详细说明：</p><table><thead><tr><th align="left">概念</th><th>说明</th></tr></thead><tbody><tr><td align="left">索引库（indexes)</td><td>索引库包含一堆相关业务，结构相似的文档document数据，比如说建立一个商品product索引库，里面可能就存放了所有的商品数据。</td></tr><tr><td align="left">类型（type）</td><td>type是索引库中的一个逻辑数据分类，一个type下的document，都有相同的field，类似于数据库中的表。比如商品type，里面存放了所有的商品document数据。<strong>6.0版本以后一个index只能有1个type，6.0版本以前每个index里可以是一个或多个type。7.0以后，没有type这个概念了</strong></td></tr><tr><td align="left">文档（document）</td><td>文档是es中的存入索引库最小数据单元，一个document可以是一条客户数据，一条商品数据，一条订单数据，通常用JSON数据结构表示。document存在索引库下的type类型中。</td></tr><tr><td align="left">字段（field）</td><td>Field是Elasticsearch的最小单位。一个document里面有多个field，每个field就是一个数据字段</td></tr><tr><td align="left">映射配置（mappings）</td><td>对type文档结构的约束叫做<code>映射(mapping)</code>，用来定义document的每个字段的约束。如：字段的数据类型、是否分词、是否索引、是否存储等特性。type是模拟mysql中的table概念。表是有结构的，也就是表中每个字段都有约束信息；</td></tr></tbody></table><h2 id="五、基本操作"><a href="#五、基本操作" class="headerlink" title="五、基本操作"></a>五、基本操作</h2><p>官方说明文档地址： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html</a> </p><p>实际开发中，通过客户端对ElasticSearch进行操作有五种方式：</p><ul><li>第一类：发送http请求(RESTful风格)操作：9200端口<ul><li>使用Postman发送请求直接操作。</li><li>使用ElasticSearch-head-master图形化界面插件操作</li><li>使用Elastic官方数据可视化的平台Kibana进行操作</li></ul></li><li>第二类：通过Java代码操作：9300端口<ul><li>Elasticsearch提供的Java API 客户端进行操作。</li><li>Spring Data ElasticSearch 持久层框架进行操作。</li></ul></li></ul><p><img src="/2020/10/25/%E6%90%9C%E7%B4%A2/ElasticSearch/image11.png"></p><p>对ElasticSearch进行的每一个操作都是一次Http请求，通过Rest风格的请求来区分不同的请求。</p><p>以下的所有请求都是在kinaba的devtoots中进行操作的。</p><h3 id="5-1-索引库-index-操作"><a href="#5-1-索引库-index-操作" class="headerlink" title="5.1 索引库(index)操作"></a>5.1 索引库(index)操作</h3><h4 id="5-1-1-创建索引库"><a href="#5-1-1-创建索引库" class="headerlink" title="5.1.1 创建索引库"></a>5.1.1 创建索引库</h4><p>发送请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 请求方法：PUT，对应http请求:http:&#x2F;&#x2F;localhost:9200&#x2F;wuxie，注意请求类型为PUT</span><br><span class="line">PUT &#x2F;wuxie</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;index&quot;</span> : <span class="string">&quot;wuxie&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>“acknowledged” : true, 代表操作成功<br>“shards_acknowledged” : true, 代表分片操作成功<br>“index” : “wuxie” 表示创建的索引库名称</p><p>注意：创建索引库的分片数默认5片，在7.0.0之后的ElasticSearch版本中，默认分片数变为1片；</p><h4 id="5-1-2-查询索引库"><a href="#5-1-2-查询索引库" class="headerlink" title="5.1.2 查询索引库"></a>5.1.2 查询索引库</h4><p>发送请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 请求方法GET</span><br><span class="line">GET &#x2F;wuxie</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;heima【索引库名】&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;aliases【别名】&quot;</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">&quot;mappings【映射】&quot;</span> : &#123; &#125;,</span><br><span class="line">    <span class="attr">&quot;settings【索引库设置】&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;index【索引】&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;creation_date【创建时间】&quot;</span> : <span class="string">&quot;1573610302775&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_shards【索引库分片数】&quot;</span> : <span class="string">&quot;5&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_replicas【索引库副本数】&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;uuid【唯一标识】&quot;</span> : <span class="string">&quot;6Ffe20CIT76KchAcvqE6NA&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;version【版本】&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;created&quot;</span> : <span class="string">&quot;6080099&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;provided_name【索引库名称】&quot;</span> : <span class="string">&quot;wuxie&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-3-删除索引库"><a href="#5-1-3-删除索引库" class="headerlink" title="5.1.3 删除索引库"></a>5.1.3 删除索引库</h4><p>发送请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 请求方法：DELETE</span><br><span class="line">DELETE &#x2F;wuxie</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-类型-type-和映射-mapping-操作"><a href="#5-2-类型-type-和映射-mapping-操作" class="headerlink" title="5.2 类型(type)和映射(mapping)操作"></a>5.2 类型(type)和映射(mapping)操作</h3><p>有了<code>索引库</code>，等于有了数据库中的<code>database</code>。接下来就需要索引库中的<code>类型</code>了，也就是数据库中的<code>表</code>。</p><p>创建数据库表需要设置字段约束，索引库也一样，在创建索引库的类型时，需要知道这个类型下有哪些字段，每个字段有哪些约束信息，这就叫做<code>映射(mapping)</code>。</p><h4 id="5-2-1-添加映射"><a href="#5-2-1-添加映射" class="headerlink" title="5.2.1 添加映射"></a>5.2.1 添加映射</h4><p>给wuxie这个索引库添加了一个名为<code>goods</code>的类型，并且在类型中设置了4个字段：</p><ul><li>title：商品标题</li><li>subtitle: 商品子标题</li><li>images：商品图片</li><li>price：商品价格</li></ul><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PUT /wuxie/goods/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">      </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;subtitle&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;index&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;float&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;index&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PUT /索引库名/_mapping/类型名称 或 索引库名/类型名称/_mapping</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;字段名称&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;type【类型】&quot;</span>: <span class="string">&quot;类型&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;index【是否索引】&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;store【是否存储】&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;analyzer【分析器】&quot;</span>: <span class="string">&quot;分词器&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类型名称：就是前面将的type的概念，类似于数据库中的表<br>字段名：任意填写，下面指定许多属性，例如：</p><ul><li><p>type：类型，Elasticsearch中支持的数据类型非常丰富，说几个关键的：</p><ol><li><p>String类型，又分两种：</p><ul><li>text：可分词</li><li>keyword：不可分词，数据会作为完整字段进行匹配</li></ul></li><li><p>Numerical：数值类型，分两类</p><ul><li>基本数据类型：long、interger、short、byte、double、float、half_float</li><li>浮点数的高精度类型：scaled_float</li></ul></li><li><p>Date：日期类型</p></li><li><p>Array：数组类型</p></li><li><p>Object：对象</p></li></ol></li><li><p>index：是否索引，默认为true，也就是说你不进行任何配置，所有字段都会被索引。</p><ul><li>true：字段会被索引，则可以用来进行搜索。默认值就是true</li><li>false：字段不会被索引，不能用来搜索</li></ul></li><li><p>store：是否将数据进行独立存储，默认为false</p><ul><li>原始的文本会存储在<code>_source</code>里面，默认情况下其他提取出来的字段都不是独立存储的，是从<code>_source</code>里面提取出来的。当然你也可以独立的存储某个字段，只要设置store:true即可，获取独立存储的字段要比从_source中解析快得多，但是也会占用更多的空间，所以要根据实际业务需求来设置，默认为false。</li></ul></li><li><p>analyzer：分词器，这里的<code>ik_max_word</code>即使用ik分词器</p></li></ul><h4 id="5-2-2-查看映射"><a href="#5-2-2-查看映射" class="headerlink" title="5.2.2 查看映射"></a>5.2.2 查看映射</h4><p>发送请求</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /wuxie/goods/_mapping</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;wuxie&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;goods&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;properties&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;image&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;index&quot;</span> : <span class="literal">false</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fields&quot;</span> : &#123;</span><br><span class="line">              <span class="attr">&quot;keyword&quot;</span> : &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;ignore_above&quot;</span> : <span class="number">256</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;name&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;analyzer&quot;</span> : <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;float&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;subtitle&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;analyzer&quot;</span> : <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;analyzer&quot;</span> : <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-3-一次创建索引库及配置映射-常用"><a href="#5-2-3-一次创建索引库及配置映射-常用" class="headerlink" title="5.2.3 一次创建索引库及配置映射(常用)"></a>5.2.3 一次创建索引库及配置映射(常用)</h4><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">PUT /wuxie</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;settings&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;goods&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">          </span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;subtitle&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;analyzer&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;images&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;index&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;price&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;float&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;index&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;index&quot;</span> : <span class="string">&quot;heima1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请求内容解释</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PUT /&#123;索引库名称&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;settings【设置】&quot;</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">&quot;mappings【映射】&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;&#123;类型名称&#125;&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type【类型】&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;index【是否索引】&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;store【是否存储】&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">&quot;analyzer【分析器】&quot;</span>: <span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-文档操作"><a href="#5-3-文档操作" class="headerlink" title="5.3 文档操作"></a>5.3 文档操作</h3><p>文档，即索引库中某个类型下的数据，会根据规则创建索引，将来用来搜索。可以类比做数据库中的每一行数据。</p><p>如果不指定id，会随机生成一个字符串作为id。</p><h4 id="5-3-1-新增文档"><a href="#5-3-1-新增文档" class="headerlink" title="5.3.1 新增文档"></a>5.3.1 新增文档</h4><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 随机id</span><br><span class="line">POST /wuxie/goods</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:<span class="number">2699.00</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 指定id</span><br><span class="line">POST /wuxie/goods/1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:<span class="number">2699.00</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;EwVLY24BL4R5dXuhZ--1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;created&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果解释</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index【索引库】&quot;</span> : <span class="string">&quot;heima&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type【类型】&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id【主键id】&quot;</span> : <span class="string">&quot;EwVLY24BL4R5dXuhZ--1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version【版本，每次对该文档操作都会自增1】&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;result【操作结果，可以是updated、deleted】&quot;</span> : <span class="string">&quot;created&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards【分片】&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total【总数】&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful【成功】&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed【失败】&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到结果显示为：<code>created</code>，是创建成功了。</p><p>另外，需要注意的是，在响应结果中有个<code>_id</code>字段，这个就是这条文档数据的<code>唯一标示</code>，以后的增删改查都依赖这个id作为唯一标示。可以看到id的值为：EwVLY24BL4R5dXuhZ–1，这里我们新增时没有指定id，所以是ES帮我们随机生成的id。</p><h4 id="5-3-2-查看文档"><a href="#5-3-2-查看文档" class="headerlink" title="5.3.2 查看文档"></a>5.3.2 查看文档</h4><p>根据rest风格，新增是put，查询是get(post也可以用来做查询)，不过查询一般都需要条件，这里我们把刚刚生成数据的id带上。</p><p>发送请求</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /wuxie/goods/EwVLY24BL4R5dXuhZ--1</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;_index【索引库】&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type【类型】&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id【主键id】&quot;</span> : <span class="string">&quot;EwVLY24BL4R5dXuhZ--1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version【版本】&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;found【查询结果】&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;_source【源文档信息】&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span> : <span class="number">2699.0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>_source</code>：源文档信息，所有的数据都在里面。</li><li><code>_id</code>：这条文档的唯一标示</li><li>found：查询结果，返回true代表查到，false代表没有</li></ul><h4 id="5-3-3-修改文档"><a href="#5-3-3-修改文档" class="headerlink" title="5.3.3 修改文档"></a>5.3.3 修改文档</h4><p>同新增请求相同，如果主键已存在则会将原有内容覆盖。</p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /wxuie/goods/1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;超米手机&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;price&quot;</span>:<span class="number">3899.00</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wxuie&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;updated&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：更新后的result为updated，就代表修改成功。且每修改一次version自增1。</p><h4 id="5-3-4-删除文档"><a href="#5-3-4-删除文档" class="headerlink" title="5.3.4 删除文档"></a>5.3.4 删除文档</h4><p>删除一个文档也不会立即从磁盘上移除，它只是被标记成已删除。Elasticsearch将会在你之后添加更多索引的时候才会在后台进行删除内容的清理。</p><p>发送请求</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /wuxie/goods/1</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_version&quot;</span> : <span class="number">3</span>,</span><br><span class="line">  <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;deleted&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到result结果是：deleted，数据被删除。如果删除不存在的问题，result：not_found</p><p><strong>根据条件删除</strong></p><p>发送请求：根据查询的条件删除，这里的查询会在后面讲述。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_delete_by_query</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took【耗时】&quot;</span> : <span class="number">58</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;total【总数】&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;deleted【删除总数】&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;batches&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;version_conflicts&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;noops&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;retries&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;bulk&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;search&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;throttled_millis&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;requests_per_second&quot;</span> : <span class="number">-1.0</span>,</span><br><span class="line">  <span class="attr">&quot;throttled_until_millis&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;failures&quot;</span> : [ ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4-批量操作"><a href="#5-4-批量操作" class="headerlink" title="5.4 批量操作"></a>5.4 批量操作</h3><p>Bulk 操作是将文档的增删改查一些列操作，通过一次请求全都做完。减少网络传输次数。相当于，将多个新增、修改、删除的请求写到一次请求当中。</p><p>注意：bulk的请求体与其他的请求体稍有不同！</p><p><strong>请求语法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/goods/_bulk</span><br><span class="line">&#123; action: &#123; metadata &#125;&#125;\n</span><br><span class="line">&#123; request body &#125;\n</span><br><span class="line">&#123; action: &#123; metadata &#125;&#125;\n</span><br><span class="line">&#123; request body &#125;\n</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>语法解析：</strong></p><ul><li>每行一定要以换行符(\n)结尾，包括最后一行</li><li>action/metadata 部分，指定做什么操作<ul><li>action代表操作的动作，必须是如下的动作之一<ul><li>create：如果文档不存在，那么就创建</li><li>index：创建一个新的文档或者替换现有文档</li><li>update：部分更新文档</li><li>delete：删除一个文档，这种操作不带请求体</li></ul></li><li>metadata，是文档的元数据，包括索引(<code>_index</code>)，类型(<code>_type</code>)，id(<code>_id</code>)…等</li></ul></li><li>request body 请求体，正常的新增文档的请求体内容(注意，不要带换行符)</li></ul><p>隔离：每个操作互不影响。操作失败的行会返回其失败信息。</p><p>实际用法：bulk请求一次不要太大，否则积压到内存中，性能会下降。所以，一次请求几千个操作、大小控制在5M-15M之间正好。</p><p><strong>案例</strong></p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/goods/_bulk</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,<span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;大米手机&quot;</span>,<span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">3288</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,<span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,<span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">2699</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,<span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;小米电视4A&quot;</span>,<span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">4288</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,<span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>: <span class="string">&quot;华为手机&quot;</span>,<span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>: <span class="number">5288</span>,<span class="attr">&quot;subtitle&quot;</span>: <span class="string">&quot;小米&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,<span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;apple手机&quot;</span>,<span class="attr">&quot;images&quot;</span>:<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">5899.00</span>&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>请求体的内容不要换行</li><li>请注意 delete 动作不能有请求体</li><li>谨记最后一个换行符不要落下。</li></ul><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">41</span>,</span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;items&quot;</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;index&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;FFTEhm4BO0vjk-su75eC&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;result&quot;</span> : <span class="string">&quot;created&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> : <span class="number">1</span>,</span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> : <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> : <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;status&quot;</span> : <span class="number">201</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个子请求都是独立执行，因此某个子请求的失败不会对其他子请求的成功与否造成影响。 如果其中任何子请求失败，最顶层的 error 标志被设置为 true ，并且在相应的请求报告出错误明细。</p><p>status属性：代表响应状态码</p><h2 id="六、请求头查询"><a href="#六、请求头查询" class="headerlink" title="六、请求头查询"></a>六、请求头查询</h2><p>Elasticsearch提供了一个基于JSON的，在请求体内编写查询语句的查询方式。称之为请求体查询。  Elasticsearch 使用它以简单的 JSON接口来展现 Lucene 功能的绝大部分。这种查询语言相对于使用晦涩难懂的查询字符串的方式，更灵活、更精确、易读和易调试。</p><p>这种查询还有一种称呼：Query DSL (Query Domain Specific Language)，领域特定语言。</p><h3 id="6-1-基本查询"><a href="#6-1-基本查询" class="headerlink" title="6.1 基本查询"></a>6.1 基本查询</h3><h4 id="6-1-1-查询所有-match-al"><a href="#6-1-1-查询所有-match-al" class="headerlink" title="6.1.1 查询所有(match_al)"></a>6.1.1 查询所有(match_al)</h4><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">请求方法：POST</span><br><span class="line">请求地址：http://127.0.0.1:9200/索引库名/_search</span><br><span class="line"></span><br><span class="line">POST /&#123;索引库&#125;/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;查询类型&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;查询条件&quot;</span>:<span class="string">&quot;查询条件值&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的query代表一个查询对象，里面可以有不同的查询属性</p><ul><li>查询类型：<ul><li>例如：<code>match_all(代表查询所有)</code>， <code>match</code>，<code>term</code> ， <code>range</code> 等等</li></ul></li><li>查询条件：查询条件会根据类型的不同，写法也有差异</li></ul><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took【查询花费时间，单位毫秒】&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out【是否超时】&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards【分片信息】&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total【总数】&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful【成功】&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped【忽略】&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed【失败】&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits【搜索命中结果】&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total【命中总数】&quot;</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;max_score【所有查询结果中，文档的最高得分】&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">&quot;hits【命中结果集合】&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index【索引库】&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type【类型】&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id【主键】&quot;</span> : <span class="string">&quot;ADWoZ24Bx8DA1HO-R9DD&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score【当前结果匹配得分】&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source【源文档信息】&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;_zWoZ24Bx8DA1HO-R8_D&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;_jWoZ24Bx8DA1HO-R8_D&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;大米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">3288</span></span><br><span class="line">&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-2-匹配查询-match"><a href="#6-1-2-匹配查询-match" class="headerlink" title="6.1.2 匹配查询(match)"></a>6.1.2 匹配查询(match)</h4><p><code>match</code>类型查询，会把查询条件进行分词，然后进行查询，多个词条之间是or的关系</p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;小米手机&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">5</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.5753642</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;_zWoZ24Bx8DA1HO-R8_D&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.5753642</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;ADWoZ24Bx8DA1HO-R9DD&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.2876821</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;_jWoZ24Bx8DA1HO-R8_D&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.2876821</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;大米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">3288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的案例中，不仅会查询到电视，而且与小米相关的都会查询到。某些情况下，我们需要更精确查找，我们希望这个关系变成<code>and</code>，可以这样做：</p><p>发送请求：</p><p>本例中，只有同时包含<code>小米</code>和<code>手机</code>的词条才会被搜索到。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query【查询匹配的内容】&quot;</span>: <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;operator【查询的关键词之间的关系，默认是or，如小米手机被分为小米和手机，如果是or就会查询title包含小米或手机的文档】&quot;</span>: <span class="string">&quot;and&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">4</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.5753642</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;_zWoZ24Bx8DA1HO-R8_D&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.5753642</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-3-多字段匹配查询-multi-match"><a href="#6-1-3-多字段匹配查询-multi-match" class="headerlink" title="6.1.3 多字段匹配查询(multi_match)"></a>6.1.3 多字段匹配查询(multi_match)</h4><p><code>multi_match</code>与<code>match</code>类似，不同的是它可以在多个字段中查询。</p><p>发送请求：</p><p>本例中，我们在title字段和subtitle字段中查询<code>小米</code>这个词</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;fields&quot;</span>: [<span class="string">&quot;title&quot;</span>,<span class="string">&quot;subtitle&quot;</span>] #设置查询的多个字段</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;took&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">&quot;timed_out&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">&quot;skipped&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">&quot;max_score&quot;</span>: <span class="number">0.6099695</span>,</span><br><span class="line">        <span class="attr">&quot;hits&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;qfHnLG4BWrjRrOzL8Ywa&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_score&quot;</span>: <span class="number">0.6099695</span>,</span><br><span class="line">                <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;price&quot;</span>: <span class="number">4288</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;qvHyLG4BWrjRrOzL9Yzn&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_score&quot;</span>: <span class="number">0.2876821</span>,</span><br><span class="line">                <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;华为手机&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;price&quot;</span>: <span class="number">5288</span>,</span><br><span class="line">                    <span class="attr">&quot;subtitle&quot;</span>: <span class="string">&quot;小米&quot;</span> #该文档的title并不包含小米关键词，而subtitle却有该关键词，所以也在查询结果中</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;qPHnLG4BWrjRrOzL3Yxl&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_score&quot;</span>: <span class="number">0.2876821</span>,</span><br><span class="line">                <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;price&quot;</span>: <span class="number">2699</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-4-关键词精确查询-term"><a href="#6-1-4-关键词精确查询-term" class="headerlink" title="6.1.4 关键词精确查询(term)"></a>6.1.4 关键词精确查询(term)</h4><p>term查询，精确的关键词匹配查询，不对象查询条件进行分词</p><p>发送请求</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">      &quot;title&quot;: &#123; # 设置映射时，这个字段是text，且&quot;analyzer&quot;: &quot;ik_max_word&quot;</span><br><span class="line">        &quot;value&quot;: &quot;小米&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.6931472</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;CzXDZ24Bx8DA1HO-nNDZ&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.6931472</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;DDXDZ24Bx8DA1HO-nNDZ&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.2876821</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-1-5-多关键词精确查询-terms"><a href="#6-1-5-多关键词精确查询-terms" class="headerlink" title="6.1.5 多关键词精确查询(terms)"></a>6.1.5 多关键词精确查询(terms)</h4><p><code>terms</code> 查询和 term 查询一样，但它允许你指定多值进行匹配。如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件，类似于mysql的in</p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查询价格为2699或4288的商品</span><br><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;terms&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: [<span class="number">2699</span>,<span class="number">4288</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.6931472</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;CzXDZ24Bx8DA1HO-nNDZ&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.6931472</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;DDXDZ24Bx8DA1HO-nNDZ&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.2876821</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-结果过滤"><a href="#6-2-结果过滤" class="headerlink" title="6.2 结果过滤"></a>6.2 结果过滤</h3><p>默认情况下，elasticsearch在搜索的结果中，会把文档中保存在<code>_source</code>的所有字段都返回。如果我们只想获取其中的部分字段，我们可以添加<code>_source</code>的过滤。</p><h4 id="6-2-1-指定字段"><a href="#6-2-1-指定字段" class="headerlink" title="6.2.1 指定字段"></a>6.2.1 指定字段</h4><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 指定查询结果中，只显示title和price两个字段</span><br><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_source&quot;</span>: [<span class="string">&quot;title&quot;</span>,<span class="string">&quot;price&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: <span class="number">2699</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">8</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fuvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span>,</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fevESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span>,</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-2-2-过滤指定字段：includes和excludes"><a href="#6-2-2-过滤指定字段：includes和excludes" class="headerlink" title="6.2.2 过滤指定字段：includes和excludes"></a>6.2.2 过滤指定字段：includes和excludes</h4><p>我们也可以通过：</p><ul><li>includes：来指定想要显示的字段</li><li>excludes：来指定不想要显示的字段</li></ul><p>二者都是可选的。</p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;excludes&quot;</span>:[<span class="string">&quot;title&quot;</span>,<span class="string">&quot;price&quot;</span>] # 查询结果不显示title和price</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: <span class="number">2699</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fuvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fevESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-高级查询"><a href="#6-3-高级查询" class="headerlink" title="6.3 高级查询"></a>6.3 高级查询</h3><h4 id="6-3-1-布尔组合-bool"><a href="#6-3-1-布尔组合-bool" class="headerlink" title="6.3.1 布尔组合(bool)"></a>6.3.1 布尔组合(bool)</h4><p><code>bool</code>把各种其它查询通过<code>must</code>（必须 ）、<code>must_not</code>（必须不）、<code>should</code>（应该）的方式进行组合</p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">post /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;bool&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;must&quot;</span>:     &#123; <span class="attr">&quot;match&quot;</span>: &#123; <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;小米&quot;</span> &#125;&#125;,</span><br><span class="line">        <span class="attr">&quot;must_not&quot;</span>: &#123; <span class="attr">&quot;match&quot;</span>: &#123; <span class="attr">&quot;title&quot;</span>:  <span class="string">&quot;电视&quot;</span> &#125;&#125;,</span><br><span class="line">        <span class="attr">&quot;should&quot;</span>:   &#123; <span class="attr">&quot;match&quot;</span>: &#123; <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;手机&quot;</span> &#125;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;took&quot;</span>: <span class="number">11</span>,</span><br><span class="line">    <span class="attr">&quot;timed_out&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">&quot;successful&quot;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">&quot;skipped&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;total&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;max_score&quot;</span>: <span class="number">0.5753642</span>,</span><br><span class="line">        <span class="attr">&quot;hits&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_id&quot;</span>: <span class="string">&quot;qPHnLG4BWrjRrOzL3Yxl&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;_score&quot;</span>: <span class="number">0.5753642</span>,</span><br><span class="line">                <span class="attr">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;images&quot;</span>: <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;price&quot;</span>: <span class="number">2699</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-2-范围查询-range"><a href="#6-3-2-范围查询-range" class="headerlink" title="6.3.2 范围查询(range)"></a>6.3.2 范围查询(range)</h4><p><code>range</code> 查询找出那些落在指定区间内的数字或者时间。<code>range</code>查询允许以下字符：</p><table><thead><tr><th align="center">操作符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">gt == (greater than)</td><td align="center">大于&gt;</td></tr><tr><td align="center">gte == (greater than equal)</td><td align="center">大于等于&gt;=</td></tr><tr><td align="center">lt == (less than)</td><td align="center">小于&lt;</td></tr><tr><td align="center">lte == (less than equal)</td><td align="center">小于等于&lt;=</td></tr></tbody></table><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查询价格大于等于2699，且小于4000元的所有商品。</span><br><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;range&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: &#123;<span class="attr">&quot;gte&quot;</span>: <span class="number">2699</span>,<span class="attr">&quot;lt&quot;</span>: <span class="number">4000</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;CjXDZ24Bx8DA1HO-nNDZ&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;大米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">3288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;CzXDZ24Bx8DA1HO-nNDZ&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-3-模糊查询-fuzzy"><a href="#6-3-3-模糊查询-fuzzy" class="headerlink" title="6.3.3 模糊查询(fuzzy)"></a>6.3.3 模糊查询(fuzzy)</h4><p>fuzzy自动将拼写错误的搜索文本，进行纠正，纠正以后去尝试匹配索引中的数据。它允许用户搜索词条与实际词条出现偏差，但是偏差的编辑距离不得超过2：</p><p>修改偏差值：搜索关键词的偏差，默认就是2，我们可以通过fuzziness修改。</p><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;fuzzy&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;applaa&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;fuzziness&quot;</span>: <span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">26</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.6814182</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;gOvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.6814182</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;apple手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">5899.0</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-4-查询排序"><a href="#6-4-查询排序" class="headerlink" title="6.4 查询排序"></a>6.4 查询排序</h3><p><code>sort</code> 可以让我们按照不同的字段进行排序，并且通过<code>order</code>指定排序的方式。desc降序，asc升序。</p><p>发送请求</p><p>假定我们想要结合使用 price和 _score（得分） 进行查询，并且匹配的结果首先按照价格排序，然后按照相关性得分排序</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;match_all&quot;</span>:&#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;sort&quot;</span>: [</span><br><span class="line">      &#123; <span class="attr">&quot;price&quot;</span>: &#123; <span class="attr">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span> &#125;&#125;,</span><br><span class="line">      &#123; <span class="attr">&quot;_score&quot;</span>: &#123; <span class="attr">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span> &#125;&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">11</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">8</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fevESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">2699.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;gevGSXUBkhVKNdm-jtYz&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;OPPO手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://www.baidu.com/1.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="string">&quot;3288.00&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">3288.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fOvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;大米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">3288</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">3288.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;guvGSXUBkhVKNdm-jtYz&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;VIVO手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://www.baidu.com/31.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="string">&quot;3288.00&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">3288.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;g-vGSXUBkhVKNdm-jtYz&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;一加手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://www.baidu.com/21.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="string">&quot;3288.00&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">3288.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fuvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">4288.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;f-vESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;华为手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">5288</span>,</span><br><span class="line">          <span class="attr">&quot;subtitle&quot;</span> : <span class="string">&quot;小米&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">5288.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;gOvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;apple手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">5899.0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> : [</span><br><span class="line">          <span class="number">5899.0</span>,</span><br><span class="line">          <span class="number">1.0</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-5-高亮查询"><a href="#6-5-高亮查询" class="headerlink" title="6.5 高亮查询"></a>6.5 高亮查询</h3><p>什么是高亮显示：在进行关键字搜索时，搜索出的内容中的关键字会显示不同的颜色，称之为高亮。</p><p>ElasticSearch可以对查询内容中的关键字部分，进行标签和样式(高亮)的设置。</p><p>在使用match查询的同时，加上一个highlight属性：</p><ul><li>pre_tags：前置标签</li><li>post_tags：后置标签</li><li>fields：需要高亮的字段<ul><li>title：这里声明title字段需要高亮，后面可以为这个字段设置特有配置，也可以空</li></ul></li></ul><p><strong>发送请求</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 高亮 查询</span><br><span class="line">POST /wuxie/goods/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;小米&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;pre_tags&quot;</span>: <span class="string">&quot;&lt;font sytle=&#x27;color:red;&#x27;&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;post_tags&quot;</span>: <span class="string">&quot;&lt;/font&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>响应结果</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">49</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">0.8142733</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fuvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.8142733</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米电视4A&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">4288</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;&lt;font sytle=&#x27;color:red;&#x27;&gt;小米&lt;/font&gt;电视4A&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fevESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">0.2876821</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">2699</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;highlight&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : [</span><br><span class="line">            <span class="string">&quot;&lt;font sytle=&#x27;color:red;&#x27;&gt;小米&lt;/font&gt;手机&quot;</span> # 此时返回的关键词使用hightlight被tags包裹了</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6-分页查询"><a href="#6-6-分页查询" class="headerlink" title="6.6 分页查询"></a>6.6 分页查询</h3><p>发送请求</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /wuxie/goods/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;from&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;size&quot;</span>: <span class="number">5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>size：每页显示多少条 </li><li>from：当前页的起始索引，int from = (当前页 - 1) * 每页条数</li></ul><p>响应结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;took&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> : <span class="number">5</span>,</span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;total&quot;</span> : <span class="number">8</span>,</span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;gevGSXUBkhVKNdm-jtYz&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;OPPO手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://www.baidu.com/1.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="string">&quot;3288.00&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;wuxie&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;goods&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> : <span class="string">&quot;fOvESXUBkhVKNdm-E9bF&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> : <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;title&quot;</span> : <span class="string">&quot;大米手机&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;images&quot;</span> : <span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;price&quot;</span> : <span class="number">3288</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、高级Rest客户端"><a href="#七、高级Rest客户端" class="headerlink" title="七、高级Rest客户端"></a>七、高级Rest客户端</h2><h3 id="7-1-环境搭建"><a href="#7-1-环境搭建" class="headerlink" title="7.1 环境搭建"></a>7.1 环境搭建</h3><p>相关依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--elasticsearch的高级别rest客户端--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--elasticsearch的rest客户端--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--elasticsearch的核心jar包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将RestHighLevelClient对象注入Spring容器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;elasticsearch&quot;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticSearchConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line">    <span class="keyword">private</span> Integer port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化RestHighLevelClient，将该对象注入IOC容器</span></span><br><span class="line">    <span class="meta">@Bean(destroyMethod = &quot;close&quot;)</span><span class="comment">//销毁时调用close方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestHighLevelClient <span class="title">client</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//RestClient客户端构建器对象</span></span><br><span class="line">        RestClientBuilder restClientBuilder = RestClient.builder(<span class="keyword">new</span> HttpHost(host, port, <span class="string">&quot;http&quot;</span>));</span><br><span class="line">        <span class="comment">//操作es的高级rest客户端对象</span></span><br><span class="line">        RestHighLevelClient restHighLevelClient = <span class="keyword">new</span> RestHighLevelClient(restClientBuilder);</span><br><span class="line">        <span class="keyword">return</span> restHighLevelClient;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//getter ,setter,toString..省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置主机和端口号</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># es服务地址</span></span><br><span class="line"><span class="string">elasticsearch.host=127.0.0.1</span></span><br><span class="line"><span class="comment"># es服务端口</span></span><br><span class="line"><span class="string">elasticsearch.port=9200</span></span><br></pre></td></tr></table></figure><h3 id="7-2-操作索引库"><a href="#7-2-操作索引库" class="headerlink" title="7.2 操作索引库"></a>7.2 操作索引库</h3><h4 id="7-2-1-创建索引库"><a href="#7-2-1-创建索引库" class="headerlink" title="7.2.1 创建索引库"></a>7.2.1 创建索引库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象，创建索引的请求</span></span><br><span class="line">    CreateIndexRequest indexRequest = <span class="keyword">new</span> CreateIndexRequest(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取的是索引的客户端对象，可以对索引进行新增、删除、查询、配置映射等操作</span></span><br><span class="line">    IndicesClient indicesClient = client.indices();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.客户端发送请求，获取响应对象；</span></span><br><span class="line">    <span class="comment">// 第一个参数是请求对象，第二个参数是当前请求对象的配置（包括请求头、响应内容大小及异常的回调方法）</span></span><br><span class="line">    CreateIndexResponse response = indicesClient.create(indexRequest, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//3.显示响应结果信息</span></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;index:&quot;</span>+response.index());</span><br><span class="line">    System.out.println(<span class="string">&quot;acknowledged:&quot;</span>+response.isAcknowledged());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.关闭客户端</span></span><br><span class="line">    client.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送请求中，传入请求对象的同时还设置了一个RequestOptions对象的静态成员变量DEFAULT。其含义是，配置当前请求选项为默认值。</p><p>其中RequestOptions对象的作用是用来配置请求，主要配置项目有请求头，缓冲区大小(默认100M)，异常处理器(warningsHandler)。默认情况下，缓冲区大小100MB，请求头及异常处理器为空。</p><h4 id="7-2-2-查看索引库"><a href="#7-2-2-查看索引库" class="headerlink" title="7.2.2 查看索引库"></a>7.2.2 查看索引库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//创建请求对象，查询索引的请求</span></span><br><span class="line">    GetIndexRequest request = <span class="keyword">new</span> GetIndexRequest(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取操作索引的对象</span></span><br><span class="line">    IndicesClient indicesClient = client.indices();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据请求对象，执行索引的操作</span></span><br><span class="line">    GetIndexResponse response = indicesClient.get(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看响应信息</span></span><br><span class="line">    System.out.println(response.getAliases());</span><br><span class="line">    System.out.println(response.getMappings());</span><br><span class="line">    System.out.println(response.getSettings());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭客户端，由于配置了bean在销毁时调用close方法，所以可省略</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-2-3-删除索引库"><a href="#7-2-3-删除索引库" class="headerlink" title="7.2.3 删除索引库"></a>7.2.3 删除索引库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    DeleteIndexRequest request = <span class="keyword">new</span> DeleteIndexRequest(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    IndicesClient indices = client.indices();</span><br><span class="line">    AcknowledgedResponse response = indices.delete(request, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(response.isAcknowledged());<span class="comment">//返回删除结果</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-3-操作映射"><a href="#7-3-操作映射" class="headerlink" title="7.3 操作映射"></a>7.3 操作映射</h3><h4 id="7-3-1-创建映射"><a href="#7-3-1-创建映射" class="headerlink" title="7.3.1 创建映射"></a>7.3.1 创建映射</h4><p>RestHighLevelClient配置映射，与kibana略有区别。在客户端中配置映射，不支持设置类型type。不设置type，并不代表没有，而是默认的type为<code>_doc</code>。</p><p>第一种方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建映射信息</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMapping</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//创建请求对象：索引、类型</span></span><br><span class="line">    <span class="comment">//索引库的名称传入构造函数</span></span><br><span class="line">    <span class="comment">//类型默认值，在6.8.0版本中是不支持设置类型的，默认类型是_doc</span></span><br><span class="line">    PutMappingRequest mappingRequest = <span class="keyword">new</span> PutMappingRequest(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建请求体</span></span><br><span class="line">    XContentBuilder jsonBuilder = XContentFactory.jsonBuilder();</span><br><span class="line">    jsonBuilder.startObject()</span><br><span class="line">        .startObject(<span class="string">&quot;properties&quot;</span>)</span><br><span class="line">        .startObject(<span class="string">&quot;title&quot;</span>)</span><br><span class="line">        .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;text&quot;</span>).field(<span class="string">&quot;analyzer&quot;</span>,<span class="string">&quot;ik_max_word&quot;</span>)</span><br><span class="line">        .endObject()</span><br><span class="line">        .startObject(<span class="string">&quot;subtitle&quot;</span>)</span><br><span class="line">        .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;text&quot;</span>).field(<span class="string">&quot;analyzer&quot;</span>,<span class="string">&quot;ik_max_word&quot;</span>)</span><br><span class="line">        .endObject()</span><br><span class="line">        .startObject(<span class="string">&quot;category&quot;</span>)</span><br><span class="line">        .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;keyword&quot;</span>)</span><br><span class="line">        .endObject()</span><br><span class="line">        .startObject(<span class="string">&quot;brand&quot;</span>)</span><br><span class="line">        .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;keyword&quot;</span>)</span><br><span class="line">        .endObject()</span><br><span class="line">        .startObject(<span class="string">&quot;images&quot;</span>)</span><br><span class="line">        .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;keyword&quot;</span>).field(<span class="string">&quot;index&quot;</span>,<span class="keyword">false</span>)</span><br><span class="line">        .endObject()</span><br><span class="line">        .startObject(<span class="string">&quot;price&quot;</span>)</span><br><span class="line">        .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;float&quot;</span>)</span><br><span class="line">        .endObject()</span><br><span class="line">        .endObject()</span><br><span class="line">        .endObject();</span><br><span class="line"></span><br><span class="line">    mappingRequest.source(jsonBuilder);<span class="comment">//将请求体封装到请求中</span></span><br><span class="line"></span><br><span class="line">    AcknowledgedResponse response = client.indices().putMapping(mappingRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(response.isAcknowledged());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *目标：配置映射。第二种方式，使用JSON字符串</span></span><br><span class="line"><span class="comment"> * 1.创建请求对象：配置映射</span></span><br><span class="line"><span class="comment"> *    设置索引库name</span></span><br><span class="line"><span class="comment"> *    设置配置映射请求体</span></span><br><span class="line"><span class="comment"> * 2.客户端发送请求，获取响应对象</span></span><br><span class="line"><span class="comment"> * 3.打印响应结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMappingMethodTwo</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象：配置映射</span></span><br><span class="line">    PutMappingRequest request = <span class="keyword">new</span> PutMappingRequest(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    <span class="comment">//设置请求体，source(&quot;请求体json字符串&quot;，&quot;请求体的数据类型&quot;);</span></span><br><span class="line">    request.source(<span class="string">&quot;&#123;\&quot;properties\&quot;:&#123;\&quot;title\&quot;:&#123;\&quot;type\&quot;:\&quot;text\&quot;,\&quot;analyzer\&quot;:\&quot;ik_max_word\&quot;&#125;,\&quot;subtitle\&quot;:&#123;\&quot;type\&quot;:\&quot;text\&quot;,\&quot;analyzer\&quot;:\&quot;ik_max_word\&quot;&#125;,\&quot;category\&quot;:&#123;\&quot;type\&quot;:\&quot;keyword\&quot;&#125;,\&quot;brand\&quot;:&#123;\&quot;type\&quot;:\&quot;keyword\&quot;&#125;,\&quot;price\&quot;:&#123;\&quot;type\&quot;:\&quot;float\&quot;&#125;,\&quot;images\&quot;:&#123;\&quot;type\&quot;:\&quot;keyword\&quot;,\&quot;index\&quot;:false&#125;&#125;&#125;&quot;</span>, XContentType.JSON);</span><br><span class="line">    <span class="comment">//2.客户端发送请求，获取响应对象</span></span><br><span class="line">    AcknowledgedResponse response = client.indices().putMapping(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//3.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;acknowledged::&quot;</span>+response.isAcknowledged());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-3-2-查看映射"><a href="#7-3-2-查看映射" class="headerlink" title="7.3.2 查看映射"></a>7.3.2 查看映射</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看映射信息</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMapping</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    GetMappingsRequest request = <span class="keyword">new</span> GetMappingsRequest();</span><br><span class="line">    <span class="comment">//设置索引库name</span></span><br><span class="line">    request.indices(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line">    GetMappingsResponse response = client.indices().getMapping(request, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(response.mappings().get(<span class="string">&quot;test&quot;</span>).sourceAsMap());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-4-文档操作"><a href="#7-4-文档操作" class="headerlink" title="7.4 文档操作"></a>7.4 文档操作</h3><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span><span class="comment">//构建者模式创建Goods对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goods</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;<span class="comment">//商品的唯一标识</span></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//标题</span></span><br><span class="line">    <span class="keyword">private</span> String subtitle;<span class="comment">//子标题</span></span><br><span class="line">    <span class="keyword">private</span> String category;<span class="comment">//分类</span></span><br><span class="line">    <span class="keyword">private</span> String brand;<span class="comment">//品牌</span></span><br><span class="line">    <span class="keyword">private</span> Double price;<span class="comment">//价格</span></span><br><span class="line">    <span class="keyword">private</span> String images;<span class="comment">//图片地址</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-4-1-新增文档"><a href="#7-4-1-新增文档" class="headerlink" title="7.4.1 新增文档"></a>7.4.1 新增文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postDocument</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//创建索引库对象(IndexRequest)，封装索引、映射及主键id信息</span></span><br><span class="line">    <span class="comment">//String id = UUID.randomUUID().toString();</span></span><br><span class="line">    IndexRequest indexRequest = <span class="keyword">new</span> IndexRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建请求体，三种方式</span></span><br><span class="line">    <span class="comment">//1、使用字符串</span></span><br><span class="line">    <span class="comment">//2、通过对象构造JSON字符串</span></span><br><span class="line">    Goods goods = Goods.builder()</span><br><span class="line">        .id(<span class="number">1L</span>)</span><br><span class="line">        .images(<span class="string">&quot;http://www.baidu.com/1.jpg&quot;</span>)</span><br><span class="line">        .price(<span class="number">3666.00</span>)</span><br><span class="line">        .title(<span class="string">&quot;小米手机&quot;</span>)</span><br><span class="line">        .category(<span class="string">&quot;手机&quot;</span>)</span><br><span class="line">        .brand(<span class="string">&quot;小米&quot;</span>).build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、在source中写入key-value参数</span></span><br><span class="line">    <span class="comment">//indexRequest.source(XContentType.JSON,&quot;title&quot;,&quot;小米手机&quot;,&quot;brand&quot;,&quot;小米&quot;);</span></span><br><span class="line"></span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    String requestBody = objectMapper.writeValueAsString(goods);</span><br><span class="line"></span><br><span class="line">    indexRequest.source(requestBody, XContentType.JSON);</span><br><span class="line"></span><br><span class="line">    IndexResponse response = client.index(indexRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;_index：：&quot;</span>+response.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;_type：：&quot;</span>+response.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;_id：：&quot;</span>+response.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;result：：&quot;</span>+response.getResult());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-4-2-修改文档"><a href="#7-4-2-修改文档" class="headerlink" title="7.4.2 修改文档"></a>7.4.2 修改文档</h4><p>根据id修改文档内容，与新增请求相同，如果存在该id，则修改该id的内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateDocument</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//修改文档必须传入id值，此id是唯一标识,是ElasticSearch随机生成的，不同于映射中的id</span></span><br><span class="line">    UpdateRequest updateRequest = <span class="keyword">new</span> UpdateRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>).id(<span class="string">&quot;r4NFWHUB6yUL1DAm1kGm&quot;</span>);</span><br><span class="line"></span><br><span class="line">    updateRequest.doc(XContentType.JSON,<span class="string">&quot;id&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;华为手机&quot;</span>,<span class="string">&quot;brand&quot;</span>,<span class="string">&quot;华为&quot;</span>);</span><br><span class="line"></span><br><span class="line">    UpdateResponse response = client.update(updateRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;_index：：&quot;</span>+response.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;_type：：&quot;</span>+response.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;_id：：&quot;</span>+response.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;result：：&quot;</span>+response.getResult());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-4-3-查询文档"><a href="#7-4-3-查询文档" class="headerlink" title="7.4.3 查询文档"></a>7.4.3 查询文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getDocumentById</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    GetRequest getRequest = <span class="keyword">new</span> GetRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>).id(<span class="string">&quot;r4NFWHUB6yUL1DAm1kGm&quot;</span>);</span><br><span class="line"></span><br><span class="line">    GetResponse response = client.get(getRequest,RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;_index：：&quot;</span>+response.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;_type：：&quot;</span>+response.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;_id：：&quot;</span>+response.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;_source：：&quot;</span>+response.getSourceAsString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-4-4-删除文档"><a href="#7-4-4-删除文档" class="headerlink" title="7.4.4 删除文档"></a>7.4.4 删除文档</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteDocument</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    DeleteRequest deleteRequest = <span class="keyword">new</span> DeleteRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>).id(<span class="string">&quot;sINVWHUB6yUL1DAmFkF4&quot;</span>);</span><br><span class="line"></span><br><span class="line">    DeleteResponse response = client.delete(deleteRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;_index：：&quot;</span>+response.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;_type：：&quot;</span>+response.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;_id：：&quot;</span>+response.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;_result：：&quot;</span>+response.getResult());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-4-5-文档的批量操作"><a href="#7-4-5-文档的批量操作" class="headerlink" title="7.4.5 文档的批量操作"></a>7.4.5 文档的批量操作</h4><p>批量新增文档</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量添加文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBulkDocument</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BulkRequest bulkRequest = <span class="keyword">new</span> BulkRequest();</span><br><span class="line"></span><br><span class="line">    IndexRequest request1 = <span class="keyword">new</span> IndexRequest()</span><br><span class="line">        .index(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">        .type(<span class="string">&quot;_doc&quot;</span>)</span><br><span class="line">        .id(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">        .source(XContentType.JSON, <span class="string">&quot;brand&quot;</span>, <span class="string">&quot;小米&quot;</span>, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;小米手机&quot;</span>);</span><br><span class="line">    IndexRequest request2 = <span class="keyword">new</span> IndexRequest()</span><br><span class="line">        .index(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">        .type(<span class="string">&quot;_doc&quot;</span>)</span><br><span class="line">        .id(<span class="string">&quot;2&quot;</span>)</span><br><span class="line">        .source(XContentType.JSON, <span class="string">&quot;brand&quot;</span>, <span class="string">&quot;华为&quot;</span>, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;华为&quot;</span>);</span><br><span class="line">    IndexRequest request3 = <span class="keyword">new</span> IndexRequest()</span><br><span class="line">        .index(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">        .type(<span class="string">&quot;_doc&quot;</span>)</span><br><span class="line">        .id(<span class="string">&quot;3&quot;</span>)</span><br><span class="line">        .source(XContentType.JSON, <span class="string">&quot;brand&quot;</span>, <span class="string">&quot;一加&quot;</span>, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;一加手机&quot;</span>);</span><br><span class="line"></span><br><span class="line">    bulkRequest.add(request1);</span><br><span class="line">    bulkRequest.add(request2);</span><br><span class="line">    bulkRequest.add(request3);</span><br><span class="line"></span><br><span class="line">    BulkResponse response = client.bulk(bulkRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;took::&quot;</span>+response.getTook());</span><br><span class="line">    System.out.println(<span class="string">&quot;Items::&quot;</span>+response.getItems());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>批量删除文档</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量删除文档</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBulkDocument</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BulkRequest bulkRequest = <span class="keyword">new</span> BulkRequest();</span><br><span class="line"></span><br><span class="line">    bulkRequest.add(<span class="keyword">new</span> DeleteRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>).id(<span class="string">&quot;1&quot;</span>));</span><br><span class="line">    bulkRequest.add(<span class="keyword">new</span> DeleteRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>).id(<span class="string">&quot;2&quot;</span>));</span><br><span class="line">    bulkRequest.add(<span class="keyword">new</span> DeleteRequest().index(<span class="string">&quot;test&quot;</span>).type(<span class="string">&quot;_doc&quot;</span>).id(<span class="string">&quot;3&quot;</span>));</span><br><span class="line"></span><br><span class="line">    BulkResponse response = client.bulk(bulkRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    System.out.println(<span class="string">&quot;took::&quot;</span>+response.getTook());</span><br><span class="line">    System.out.println(<span class="string">&quot;Items::&quot;</span>+response.getItems());</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-5-基本查询"><a href="#7-5-基本查询" class="headerlink" title="7.5 基本查询"></a>7.5 基本查询</h3><h4 id="7-5-1-匹配查询-matchAll"><a href="#7-5-1-匹配查询-matchAll" class="headerlink" title="7.5.1 匹配查询(matchAll)"></a>7.5.1 匹配查询(matchAll)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryAll</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest().indices(<span class="string">&quot;wuxie&quot;</span>).types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//QueryBuilders类包含了大部分的请求体查询静态方法，且方法名包含查询语句的关键字</span></span><br><span class="line">    builder.query(QueryBuilders.matchAllQuery());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(builder);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    SearchHits hits = response.getHits();</span><br><span class="line">    System.out.println(<span class="string">&quot;took::&quot;</span>+response.getTook());</span><br><span class="line">    System.out.println(<span class="string">&quot;time_out::&quot;</span>+response.isTimedOut());</span><br><span class="line">    System.out.println(<span class="string">&quot;total::&quot;</span>+hits.getTotalHits());</span><br><span class="line">    System.out.println(<span class="string">&quot;max_score::&quot;</span>+hits.getMaxScore());</span><br><span class="line">    System.out.println(<span class="string">&quot;&lt;----hits:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">        String sourceAsString = hit.getSourceAsString();</span><br><span class="line">        System.out.println(sourceAsString);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;----&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-2-匹配查询-match"><a href="#7-5-2-匹配查询-match" class="headerlink" title="7.5.2 匹配查询(match)"></a>7.5.2 匹配查询(match)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">matchQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象：匹配查询</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">    request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//匹配查询，设置分词后关键词的查询关系，默认是or</span></span><br><span class="line">    MatchQueryBuilder matchQueryBuilder = QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;小米手机&quot;</span>)</span><br><span class="line">            .operator(Operator.AND);</span><br><span class="line">    sourceBuilder.query(matchQueryBuilder);</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印结果信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printResult</span><span class="params">(SearchResponse response)</span> </span>&#123;</span><br><span class="line">    SearchHits hits = response.getHits();</span><br><span class="line">    System.out.println(<span class="string">&quot;took::&quot;</span>+response.getTook());</span><br><span class="line">    System.out.println(<span class="string">&quot;time_out::&quot;</span>+response.isTimedOut());</span><br><span class="line">    System.out.println(<span class="string">&quot;total::&quot;</span>+hits.getTotalHits());</span><br><span class="line">    System.out.println(<span class="string">&quot;max_score::&quot;</span>+hits.getMaxScore());</span><br><span class="line">    System.out.println(<span class="string">&quot;&lt;----hits:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">        String sourceAsString = hit.getSourceAsString();</span><br><span class="line">        System.out.println(sourceAsString);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;----&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-3-匹配查询-multi-match"><a href="#7-5-3-匹配查询-multi-match" class="headerlink" title="7.5.3 匹配查询(multi_match)"></a>7.5.3 匹配查询(multi_match)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mulitMatchQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">    request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//设置查询方式：多字段匹配查询，第一个参数是条件，以后的参数都是字段</span></span><br><span class="line">    MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders.multiMatchQuery(<span class="string">&quot;小米&quot;</span>, <span class="string">&quot;title&quot;</span>, <span class="string">&quot;subtitle&quot;</span>);</span><br><span class="line">    sourceBuilder.query(multiMatchQueryBuilder);</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-4-关键词精确匹配查询-term"><a href="#7-5-4-关键词精确匹配查询-term" class="headerlink" title="7.5.4 关键词精确匹配查询(term)"></a>7.5.4 关键词精确匹配查询(term)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">    request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//设置查询方式：关键词精确查询</span></span><br><span class="line">    sourceBuilder.query(QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;小米&quot;</span>));</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-5-5-多关键词精确匹配查询-terms"><a href="#7-5-5-多关键词精确匹配查询-terms" class="headerlink" title="7.5.5 多关键词精确匹配查询(terms)"></a>7.5.5 多关键词精确匹配查询(terms)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termsQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">    request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//设置查询方式：多关键词精确查询</span></span><br><span class="line">    sourceBuilder.query( QueryBuilders.termsQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;手机&quot;</span>, <span class="string">&quot;小米&quot;</span>));</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-6-结果过滤、排序和分页"><a href="#7-6-结果过滤、排序和分页" class="headerlink" title="7.6 结果过滤、排序和分页"></a>7.6 结果过滤、排序和分页</h3><p>设置过滤、排序和分页实在SourceBuilder中构建的，而上面的查询条件是在query方法中通过QueryBuilders的方法中构建的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">includesSources</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">     request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//设置查询方式</span></span><br><span class="line">    sourceBuilder.query(QueryBuilders.matchAllQuery());</span><br><span class="line">    <span class="comment">//设置过滤条件，包含和排除</span></span><br><span class="line">    String[] includes = &#123;<span class="string">&quot;title&quot;</span>,<span class="string">&quot;price&quot;</span>,<span class="string">&quot;images&quot;</span>&#125;;</span><br><span class="line">    String[] excludes = &#123;<span class="string">&quot;images&quot;</span>&#125;;</span><br><span class="line">    sourceBuilder.fetchSource(includes,excludes);</span><br><span class="line">    <span class="comment">//设置排序</span></span><br><span class="line">    FieldSortBuilder sortBuilder = SortBuilders.fieldSort(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">    <span class="comment">//设置排序降序</span></span><br><span class="line">    sortBuilder.order(SortOrder.DESC);</span><br><span class="line">    sourceBuilder.sort(sortBuilder);</span><br><span class="line">    <span class="comment">//设置分页</span></span><br><span class="line">    sourceBuilder.from(<span class="number">0</span>);<span class="comment">//当前页起始索引</span></span><br><span class="line">    sourceBuilder.size(<span class="number">5</span>);<span class="comment">//每页显示多少条</span></span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-7-高级查询"><a href="#7-7-高级查询" class="headerlink" title="7.7 高级查询"></a>7.7 高级查询</h3><h4 id="7-7-1-布尔查询-bool"><a href="#7-7-1-布尔查询-bool" class="headerlink" title="7.7.1 布尔查询(bool)"></a>7.7.1 布尔查询(bool)</h4><p>注意布尔查询在请求体构建中使用的是BoolQueryBuilder对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">boolQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">    request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//构建查询方式：布尔查询</span></span><br><span class="line">    BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();</span><br><span class="line">    <span class="comment">//必须包含小米</span></span><br><span class="line">    boolQueryBuilder.must(QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;小米&quot;</span>));</span><br><span class="line">    <span class="comment">//必须不含电视</span></span><br><span class="line">    boolQueryBuilder.mustNot(QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;电视&quot;</span>));</span><br><span class="line">    <span class="comment">//应该含有手机</span></span><br><span class="line">    boolQueryBuilder.should(QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;手机&quot;</span>));</span><br><span class="line">    <span class="comment">//设置查询方式</span></span><br><span class="line">    sourceBuilder.query(boolQueryBuilder);</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-7-2-范围查询-range"><a href="#7-7-2-范围查询-range" class="headerlink" title="7.7.2 范围查询(range)"></a>7.7.2 范围查询(range)</h4><p>此时使用的请求体构建器是RangeQueryBuilder对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rangeQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest();</span><br><span class="line">    request.types(<span class="string">&quot;goods&quot;</span>);</span><br><span class="line">    request.indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//构建查询方式：范围查询</span></span><br><span class="line">    RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">    <span class="comment">//大于2千</span></span><br><span class="line">    rangeQueryBuilder.gt(<span class="number">2000</span>);</span><br><span class="line">    <span class="comment">//小于4千</span></span><br><span class="line">    rangeQueryBuilder.lt(<span class="number">4000</span>);</span><br><span class="line">    <span class="comment">//设置查询方式</span></span><br><span class="line">    sourceBuilder.query(rangeQueryBuilder);</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-7-3-模糊查询-fuzzy"><a href="#7-7-3-模糊查询-fuzzy" class="headerlink" title="7.7.3 模糊查询(fuzzy)"></a>7.7.3 模糊查询(fuzzy)</h4><p>此时使用的请求体构建器是SearchSourceBuilder对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fuzzyQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest().types(<span class="string">&quot;goods&quot;</span>).indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//构建查询方式：模糊查询</span></span><br><span class="line">    FuzzyQueryBuilder fuzzyQueryBuilder = QueryBuilders.fuzzyQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;appla&quot;</span>);</span><br><span class="line">    <span class="comment">//设置偏差值</span></span><br><span class="line">    fuzzyQueryBuilder.fuzziness(Fuzziness.ONE);</span><br><span class="line">    <span class="comment">//设置查询方式</span></span><br><span class="line">    sourceBuilder.query(fuzzyQueryBuilder);</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    printResult(response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-7-4-高亮查询-Highlighter"><a href="#7-7-4-高亮查询-Highlighter" class="headerlink" title="7.7.4 高亮查询(Highlighter)"></a>7.7.4 高亮查询(Highlighter)</h4><p>此时使用的请求体构建器是HighlightBuilder对象，并使用QueryBuilders进行条件查询，查询结果字段中的关键词高亮。</p><p>此时设置请求体构建器的方法是highlighter()。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">highLighterQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//1.创建请求对象</span></span><br><span class="line">    SearchRequest request = <span class="keyword">new</span> SearchRequest().types(<span class="string">&quot;goods&quot;</span>).indices(<span class="string">&quot;wuxie&quot;</span>);</span><br><span class="line">    <span class="comment">//2.创建查询请求体构建器</span></span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    <span class="comment">//构建查询方式：高亮查询</span></span><br><span class="line">    <span class="comment">//设置查询方式</span></span><br><span class="line">    sourceBuilder.query(QueryBuilders.termsQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;小米&quot;</span>););</span><br><span class="line">    <span class="comment">//构建高亮字段</span></span><br><span class="line">    HighlightBuilder highlightBuilder = <span class="keyword">new</span> HighlightBuilder();</span><br><span class="line">    highlightBuilder.preTags(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;&quot;</span>);<span class="comment">//设置标签前缀</span></span><br><span class="line">    highlightBuilder.postTags(<span class="string">&quot;&lt;/font&gt;&quot;</span>);<span class="comment">//设置标签后缀</span></span><br><span class="line">    highlightBuilder.field(<span class="string">&quot;title&quot;</span>);<span class="comment">//设置高亮字段</span></span><br><span class="line">    <span class="comment">//设置高亮构建对象</span></span><br><span class="line">    sourceBuilder.highlighter(highlightBuilder);</span><br><span class="line">    <span class="comment">//设置请求体</span></span><br><span class="line">    request.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//3.客户端发送请求，获取响应对象</span></span><br><span class="line">    SearchResponse response = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.打印响应结果</span></span><br><span class="line">    SearchHits hits = response.getHits();</span><br><span class="line">    System.out.println(<span class="string">&quot;took::&quot;</span>+response.getTook());</span><br><span class="line">    System.out.println(<span class="string">&quot;time_out::&quot;</span>+response.isTimedOut());</span><br><span class="line">    System.out.println(<span class="string">&quot;total::&quot;</span>+hits.getTotalHits());</span><br><span class="line">    System.out.println(<span class="string">&quot;max_score::&quot;</span>+hits.getMaxScore());</span><br><span class="line">    System.out.println(<span class="string">&quot;hits::::&gt;&gt;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">        String sourceAsString = hit.getSourceAsString();</span><br><span class="line">        System.out.println(sourceAsString);</span><br><span class="line">        <span class="comment">//打印高亮结果</span></span><br><span class="line">        Map&lt;String, HighlightField&gt; highlightFields = hit.getHighlightFields();</span><br><span class="line">        System.out.println(highlightFields);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;&lt;&lt;::::&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="八、Spring-Data-ElasticSearch"><a href="#八、Spring-Data-ElasticSearch" class="headerlink" title="八、Spring Data ElasticSearch"></a>八、Spring Data ElasticSearch</h2><h3 id="8-1-简介"><a href="#8-1-简介" class="headerlink" title="8.1 简介"></a>8.1 简介</h3><p>Spring Data是一个用于==简化持久层数据访问==的开源框架。其<strong>主要目标是使得对数据的访问变得方便快捷</strong>。 Spring Data可以极大的简化数据操作的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作。包括CRUD外，还包括如分页、排序等一些常用的功能，几乎可以节省持久层代码80%以上的编码工作量。</p><p>Spring Data ElasticSearch 基于 spring data API 简化 elasticSearch操作，将原始操作elasticSearch的客户端API 进行封装 。Spring Data为Elasticsearch项目提供集成搜索引擎。Spring Data Elasticsearch POJO的关键功能区域为中心的模型与Elastichsearch交互文档和轻松地编写一个存储库数据访问层。</p><blockquote><p> 使用时一定要注意版本问题，ElasticSearch 6.x与ElasticSearch 7.x的区别还是很大的</p><p>而且Spring Data ElasticSearch的高版本是支持ElasticSearch 7.x的。</p><p>本文Spring Data ElasticSearch 使用的版本是2.1.9</p></blockquote><h3 id="8-2-环境搭建"><a href="#8-2-环境搭建" class="headerlink" title="8.2 环境搭建"></a>8.2 环境搭建</h3><h4 id="8-2-1-依赖"><a href="#8-2-1-依赖" class="headerlink" title="8.2.1 依赖"></a>8.2.1 依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-2-2-创建实体类"><a href="#8-2-2-创建实体类" class="headerlink" title="8.2.2 创建实体类"></a>8.2.2 创建实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Good</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;<span class="comment">//商品的唯一标识</span></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//标题</span></span><br><span class="line">    <span class="keyword">private</span> String category;<span class="comment">//分类</span></span><br><span class="line">    <span class="keyword">private</span> String brand;<span class="comment">//品牌</span></span><br><span class="line">    <span class="keyword">private</span> Double price;<span class="comment">//价格</span></span><br><span class="line">    <span class="keyword">private</span> String images;<span class="comment">//图片地址</span></span><br><span class="line"><span class="comment">//getter，setter，toString</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-2-3-编写配置文件"><a href="#8-2-3-编写配置文件" class="headerlink" title="8.2.3 编写配置文件"></a>8.2.3 编写配置文件</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置集群名称</span></span><br><span class="line"><span class="meta">spring.data.elasticsearch.cluster-name</span>=<span class="string">elasticsearch</span></span><br><span class="line"><span class="comment"># 配置es的服务地址</span></span><br><span class="line"><span class="meta">spring.data.elasticsearch.cluster-nodes</span>=<span class="string">127.0.0.1:9300</span></span><br></pre></td></tr></table></figure><h3 id="8-3-常用操作"><a href="#8-3-常用操作" class="headerlink" title="8.3 常用操作"></a>8.3 常用操作</h3><p>几个用到的注解：</p><ul><li>@Document：声明索引库配置<ul><li>indexName：索引库名称</li><li>type：类型名称，默认是“docs”</li><li>shards：分片数量，默认5</li><li>replicas：副本数量，默认1</li></ul></li><li>@Id：声明实体类的id</li><li>@Field：声明字段属性<ul><li>type：字段的数据类型 </li><li>analyzer：指定分词器类型</li><li>index：是否创建索引 默认为true</li><li>store:是否存储 默认为false</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品实体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Document</span>() 注解作用：定义一个索引库，一个类型</span></span><br><span class="line"><span class="comment"> * indexName属性：指定索引库的名称</span></span><br><span class="line"><span class="comment"> * type属性：指定类型名称</span></span><br><span class="line"><span class="comment"> * shards属性：指定分片数</span></span><br><span class="line"><span class="comment"> * replicas属性：指定复制副本数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Document(indexName = &quot;data&quot;,type = &quot;goods&quot;,shards = 5,replicas = 1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goods</span> </span>&#123;</span><br><span class="line">    <span class="comment">//必须有id,这里的id是全局唯一的标识,等同于es中的“_id”</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * type: 字段数据类型</span></span><br><span class="line"><span class="comment">     * analyzer: 分词器类型</span></span><br><span class="line"><span class="comment">     * index: 是否索引(默认值：true)</span></span><br><span class="line"><span class="comment">     * store: 是否存储(默认值：false)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Text,analyzer = &quot;ik_max_word&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//标题</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword)</span></span><br><span class="line">    <span class="keyword">private</span> String category;<span class="comment">//分类</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword)</span></span><br><span class="line">    <span class="keyword">private</span> String brand;<span class="comment">//品牌</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Double)</span></span><br><span class="line">    <span class="keyword">private</span> Double price;<span class="comment">//价格</span></span><br><span class="line">    <span class="meta">@Field(type = FieldType.Keyword,index = false)</span></span><br><span class="line">    <span class="keyword">private</span> String images;<span class="comment">//图片地址</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-1-操作索引库"><a href="#8-3-1-操作索引库" class="headerlink" title="8.3.1 操作索引库"></a>8.3.1 操作索引库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span><span class="comment">//此版本需要加入该注解导入Spring容器</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexOperation</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ElasticsearchTemplate elasticsearchTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建索引</span></span><br><span class="line">        <span class="keyword">boolean</span> data = elasticsearchTemplate.createIndex(Goods.class);</span><br><span class="line">        System.out.println(data);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置映射</span></span><br><span class="line">        <span class="keyword">boolean</span> result = elasticsearchTemplate.putMapping(Goods.class);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//删除索引</span></span><br><span class="line">        <span class="keyword">boolean</span> deleteIndex = elasticsearchTemplate.deleteIndex(Goods.class);</span><br><span class="line">        System.out.println(deleteIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//获取映射信息</span></span><br><span class="line">        Map mapping = elasticsearchTemplate.getMapping(Goods.class);</span><br><span class="line"></span><br><span class="line">        System.out.println(mapping.get(<span class="string">&quot;properties&quot;</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-2-文档的增删改查"><a href="#8-3-2-文档的增删改查" class="headerlink" title="8.3.2 文档的增删改查"></a>8.3.2 文档的增删改查</h4><p>创建dao层类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  继承持久层接口的ElasticSearch的模板接口</span></span><br><span class="line"><span class="comment"> *  ElasticsearchRepository&lt;映射对应的类名,主键类型&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodDao</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">Goods</span>,<span class="title">Long</span>&gt; </span>&#123;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法说明</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增文档</span></span><br><span class="line"><span class="function">Goods <span class="title">save</span><span class="params">(Goods var1)</span></span>;</span><br><span class="line"><span class="comment">//批量新增文档</span></span><br><span class="line"><span class="function">Iterable&lt;Goods&gt; <span class="title">saveAll</span><span class="params">(Iterable&lt;Goods&gt; var1)</span></span>;</span><br><span class="line"><span class="comment">//根据id查找文档</span></span><br><span class="line"><span class="function">Optional&lt;Goods&gt; <span class="title">findById</span><span class="params">(Long var1)</span></span>;</span><br><span class="line"><span class="comment">//判断某个文档是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">existsById</span><span class="params">(Long var1)</span></span>;</span><br><span class="line"><span class="comment">//查询所有文档</span></span><br><span class="line"><span class="function">Iterable&lt;Goods&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//根据id查询文档</span></span><br><span class="line"><span class="function">Iterable&lt;Goods&gt; <span class="title">findAllById</span><span class="params">(Iterable&lt;Long&gt; var1)</span></span>;</span><br><span class="line"><span class="comment">//文档数量</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">count</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//根据id删除文档</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(Long var1)</span></span>;</span><br><span class="line"><span class="comment">//删除某个文档，可以根据其他属性，不一定是id</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Goods var1)</span></span>;</span><br><span class="line"><span class="comment">//批量删除文档</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteAll</span><span class="params">(Iterable&lt;Goods&gt; var1)</span></span>;</span><br><span class="line"><span class="comment">//删除索引文档</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteAll</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringdataEsGoodCRUD</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入Good业务层实现类</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodDao goodDao;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Good good = <span class="keyword">new</span> Good();</span><br><span class="line">        good.setId(<span class="number">1l</span>);</span><br><span class="line">        good.setTitle(<span class="string">&quot;小米手机&quot;</span>);</span><br><span class="line">        good.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">        good.setBrand(<span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        good.setPrice(<span class="number">19999.0</span>);</span><br><span class="line">        good.setImages(<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>);</span><br><span class="line">        goodDao.save(good);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Good good = <span class="keyword">new</span> Good();</span><br><span class="line">        good.setId(<span class="number">1l</span>);</span><br><span class="line">        good.setTitle(<span class="string">&quot;小米手机&quot;</span>);</span><br><span class="line">        good.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">        good.setBrand(<span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        good.setPrice(<span class="number">9999.0</span>);</span><br><span class="line">        good.setImages(<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>);</span><br><span class="line">        goodDao.save(good);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Good good = <span class="keyword">new</span> Good();</span><br><span class="line">        good.setId(<span class="number">1l</span>);</span><br><span class="line">        goodDao.delete(good);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据id查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Good good = goodDao.findById(<span class="number">2l</span>).get();</span><br><span class="line">        System.out.println(good);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Iterable&lt;Good&gt; goods = goodDao.findAll();</span><br><span class="line">        <span class="keyword">for</span> (Good good : goods) &#123;</span><br><span class="line">            System.out.println(good);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//批量新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Good&gt; goodList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            Good good = <span class="keyword">new</span> Good();</span><br><span class="line">            good.setId((<span class="keyword">long</span>) i);</span><br><span class="line">            good.setTitle(<span class="string">&quot;[&quot;</span>+i+<span class="string">&quot;]小米手机&quot;</span>);</span><br><span class="line">            good.setCategory(<span class="string">&quot;手机&quot;</span>);</span><br><span class="line">            good.setBrand(<span class="string">&quot;小米&quot;</span>);</span><br><span class="line">            good.setPrice(<span class="number">19999.0</span>+i);</span><br><span class="line">            good.setImages(<span class="string">&quot;http://image.leyou.com/12479122.jpg&quot;</span>);</span><br><span class="line">            goodList.add(good);</span><br><span class="line">        &#125;</span><br><span class="line">        goodDao.saveAll(goodList);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//分页查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findByPageable</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//设置排序(排序方式，正序还是倒序，排序的id)</span></span><br><span class="line">        Sort sort = <span class="keyword">new</span> Sort(Sort.Direction.DESC,<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> currentPage=<span class="number">2</span>;<span class="comment">//当前页</span></span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">100</span>;<span class="comment">//每页显示多少条</span></span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        PageRequest pageRequest = PageRequest.of(currentPage, pageSize,sort);</span><br><span class="line">        <span class="comment">//分页查询</span></span><br><span class="line">        Page&lt;Good&gt; goodPage = goodDao.findAll(pageRequest);</span><br><span class="line">        <span class="keyword">for</span> (Good good : goodPage.getContent()) &#123;</span><br><span class="line">            System.out.println(good);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-3-Search查询"><a href="#8-3-3-Search查询" class="headerlink" title="8.3.3 Search查询"></a>8.3.3 Search查询</h4><p>ElasticSearch的search方法中QueryBuilders，就是查询对象构建对象QueryBuilders。QueryBuilders具备的能力，search方法都具备。所以大致查询方式类似。</p><p>都是主要QueryBuilders构建想要的查询，然后通过GoodsDao类的search方法查询。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringdataEsSearch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入Goods业务层实现类</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsDao goodsDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term查询</span></span><br><span class="line"><span class="comment">     * search(termQueryBuilder) 调用搜索方法，参数查询构建器对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termQuery</span><span class="params">()</span></span>&#123;</span><br><span class="line">        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        Iterable&lt;Goods&gt; goods = goodsDao.search(termQueryBuilder);</span><br><span class="line">        <span class="keyword">for</span> (Goods g : goods) &#123;</span><br><span class="line">            System.out.println(g);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term查询加分页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termQueryByPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> currentPage= <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">        <span class="comment">//设置查询分页</span></span><br><span class="line">        PageRequest pageRequest = PageRequest.of(currentPage, pageSize);</span><br><span class="line">        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        Iterable&lt;Goods&gt; goods = goodsDao.search(termQueryBuilder,pageRequest);</span><br><span class="line">        <span class="keyword">for</span> (Good g : goods) &#123;</span><br><span class="line">            System.out.println(g);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-3-4-自定义查询"><a href="#8-3-4-自定义查询" class="headerlink" title="8.3.4 自定义查询"></a>8.3.4 自定义查询</h4><p>GoodsRepository提供了非常强大的自定义查询功能；只要遵循SpringData提供的语法，我们可以任意定义方法声明；</p><p>查询语法：findBy+字段名+Keyword+字段名+….</p><table><thead><tr><th>Keyword</th><th>Sample</th><th>Elasticsearch Query String</th></tr></thead><tbody><tr><td><code>And</code></td><td><code>findByNameAndPrice</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : [ &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;, &#123;&quot;field&quot; : &#123;&quot;price&quot; : &quot;?&quot;&#125;&#125; ]&#125;&#125;</code></td></tr><tr><td><code>Or</code></td><td><code>findByNameOrPrice</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;should&quot; : [ &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;, &#123;&quot;field&quot; : &#123;&quot;price&quot; : &quot;?&quot;&#125;&#125; ]&#125;&#125;</code></td></tr><tr><td><code>Is</code></td><td><code>findByName</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Not</code></td><td><code>findByNameNot</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must_not&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Between</code></td><td><code>findByPriceBetween</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : ?,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Before</code></td><td><code>findByPriceBefore</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : null,&quot;to&quot; : ?,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>After</code></td><td><code>findByPriceAfter</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;range&quot; : &#123;&quot;price&quot; : &#123;&quot;from&quot; : ?,&quot;to&quot; : null,&quot;include_lower&quot; : true,&quot;include_upper&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>Like</code></td><td><code>findByNameLike</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;?*&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>StartingWith</code></td><td><code>findByNameStartingWith</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;?*&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>EndingWith</code></td><td>findByNameEndingWith</td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &#123;&quot;query&quot; : &quot;*?&quot;,&quot;analyze_wildcard&quot; : true&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>In</code></td><td><code>findByNameIn(Collection&lt;String&gt;names)</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;bool&quot; : &#123;&quot;should&quot; : [ &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;, &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125; ]&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>NotIn</code></td><td><code>findByNameNotIn(Collection&lt;String&gt;names)</code></td><td><code>&#123;&quot;bool&quot; : &#123;&quot;must_not&quot; : &#123;&quot;bool&quot; : &#123;&quot;should&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;&#125;&#125;&#125;</code></td></tr><tr><td><code>OrderBy</code></td><td><code>findByNameOrderByNameDesc</code></td><td><code>&#123;&quot;sort&quot; : [&#123; &quot;name&quot; : &#123;&quot;order&quot; : &quot;desc&quot;&#125; &#125;],&quot;bool&quot; : &#123;&quot;must&quot; : &#123;&quot;field&quot; : &#123;&quot;name&quot; : &quot;?&quot;&#125;&#125;&#125;</code></td></tr></tbody></table><p>dao层接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  ElasticsearchRepository 持久层操作ElasticSearch的模板接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsDao</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">Goods</span>,<span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据title和价格查询，and的关系</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Goods&gt; <span class="title">findAllByTitleAndPrice</span><span class="params">(String title,Double price)</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据商品价格范围查询</span></span><br><span class="line"><span class="comment">     * 最低价格lowPrice</span></span><br><span class="line"><span class="comment">     * 最高价格highPrice</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Goods&gt; <span class="title">findByPriceBetween</span><span class="params">(Double lowPrice,Double highPrice)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义方法名称查询测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringdataEsCustomMethodQuery</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入Goods业务层实现类</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GoodsDao goodsDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据标题及价格查询</span></span><br><span class="line"><span class="comment">     * 要求价格等于20023且标题的内容包含小米关键词</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAllByTitleAndPrice</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String title = <span class="string">&quot;小米&quot;</span>;</span><br><span class="line">        Double price = <span class="number">20023.0</span>;</span><br><span class="line">        List&lt;Goods&gt; goods = goodDao.findAllByTitleAndPrice(title, price);</span><br><span class="line">        <span class="keyword">for</span> (Goods g : goods) &#123;</span><br><span class="line">            System.out.println(g);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据价格范围查询</span></span><br><span class="line"><span class="comment">     * 要求商品价格再3000，到20000之间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findPriceBetween</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">double</span> lowPrice = <span class="number">3000.0</span>;<span class="comment">//最低价</span></span><br><span class="line">        <span class="keyword">double</span> highPrice = <span class="number">20000.0</span>;<span class="comment">//最高价</span></span><br><span class="line">        List&lt;Goods&gt; goods = goodDao.findByPriceBetween(lowPrice, highPrice);</span><br><span class="line">        <span class="keyword">for</span> (Goods g : goods) &#123;</span><br><span class="line">            Systemout.println(g);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="九、结束语"><a href="#九、结束语" class="headerlink" title="九、结束语"></a>九、结束语</h2><ul><li>本篇博客使用ElasticSearch的版本是6.8，包括客户端对应的版本都是基于6.x的；</li><li>本篇博客只是对于ElasticSearch的简单使用，并未涉及到太过复杂的内容；</li></ul><p>详细官方文档地址：<a href="https://www.elastic.co/guide/index.html">https://www.elastic.co/guide/index.html</a></p>]]></content>
    
    
    <summary type="html">Elaticsearch的学习笔记整理；记录了通过kibana客户端对ElasticSearch的基本操作和查询，以及通过RestHighLevelClient和Spring Data ElasticSearch客户端对ElasticSearch的操作。</summary>
    
    
    
    <category term="Java" scheme="https://amazingdl.github.io/categories/Java/"/>
    
    
    <category term="搜索引擎" scheme="https://amazingdl.github.io/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
    <category term="NoSQL" scheme="https://amazingdl.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>Java SE之类与对象</title>
    <link href="https://amazingdl.github.io/2020/10/14/Java%E5%9F%BA%E7%A1%80/Java%20SE%E4%B9%8B%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"/>
    <id>https://amazingdl.github.io/2020/10/14/Java%E5%9F%BA%E7%A1%80/Java%20SE%E4%B9%8B%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-10-13T16:00:00.000Z</published>
    <updated>2020-10-27T00:03:54.746Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、面向对象程序设计概念"><a href="#一、面向对象程序设计概念" class="headerlink" title="一、面向对象程序设计概念"></a>一、面向对象程序设计概念</h2><p>一切都是对象</p><p>从面向对象程序设计讲到Java中的面向对象思想</p><p>什么是面向过程设计</p><p>什么是面向对象设计</p><p>什么是类</p><p>什么是对象</p><p>Java面向对象思想中加入了接口</p><p>面向对象程序设计三大特性：封装、继承和多态</p><h2 id="二、自定义类"><a href="#二、自定义类" class="headerlink" title="二、自定义类"></a>二、自定义类</h2><p>使用Java创建一个自己的类</p><h2 id="三、类的封装"><a href="#三、类的封装" class="headerlink" title="三、类的封装"></a>三、类的封装</h2><p>通过阐述类的属性、方法、构造器、内部类、代码块等结构来说明一个类的构成</p><p>static</p><p>this</p><p>类的封装性</p><h2 id="四、接口与抽象类"><a href="#四、接口与抽象类" class="headerlink" title="四、接口与抽象类"></a>四、接口与抽象类</h2><p>接口：多实现，只有抽象方法和静态属性的</p><p>抽象类：单继承</p><h2 id="六、继承与多态"><a href="#六、继承与多态" class="headerlink" title="六、继承与多态"></a>六、继承与多态</h2><p>所有的父类Object</p><p>super关键字</p><p>重写</p><p>继承与实现等内容</p><h2 id="七、其他"><a href="#七、其他" class="headerlink" title="七、其他"></a>七、其他</h2><p>包括包装类、权限修饰符、API的使用等</p><h2 id="八、结束语"><a href="#八、结束语" class="headerlink" title="八、结束语"></a>八、结束语</h2>]]></content>
    
    
    <summary type="html">当人们尝试描述这个世界的时候，他们会把所有的事物进行归类，具有相同属性的归为一类，从而更好的认识这个世界；当计算机想要认识这个世界的时候，它也用了相同的方法。</summary>
    
    
    
    <category term="Java" scheme="https://amazingdl.github.io/categories/Java/"/>
    
    
    <category term="Java SE" scheme="https://amazingdl.github.io/tags/Java-SE/"/>
    
    <category term="面向对象" scheme="https://amazingdl.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Java SE之基本语法</title>
    <link href="https://amazingdl.github.io/2020/09/01/Java%E5%9F%BA%E7%A1%80/Java%20SE%E4%B9%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://amazingdl.github.io/2020/09/01/Java%E5%9F%BA%E7%A1%80/Java%20SE%E4%B9%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2020-09-01T06:27:46.000Z</published>
    <updated>2020-10-26T23:53:26.697Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>​        同其他编程语言一样，Java也有自己的数据类型、运算符、流程控制等基本的语法；通过简单的判断和循环就能够完成复杂的算法，从而解决各种各样的问题。</p><p>​        即使各种编程语言的思想大致相同，但每种编程语言的部分细节却又不尽相同，所以基本的语法和细节还是值得注意和警惕的。</p><p>​        就如同其他编程语言一样，即使Java是面向对象的一门编程语言，Java也需要基本的数据类型、运算符和流程控制等基础的语法，因此，本篇博客就是总结和回顾一些我在学习Java时的一些基础语法知识，是对以前知识的回顾、总结，并希望通过本篇文章进一步加深我对Java的理解和对编程的理解。</p><h2 id="二、数据类型"><a href="#二、数据类型" class="headerlink" title="二、数据类型"></a>二、数据类型</h2><p>​        Java的数据类型包括基本数据类型和引用数据类型，其中基本数据类型包括四类八种，分别是byte、short、int、long、float、double、char和boolean。</p><blockquote><p>整数</p></blockquote><table><thead><tr><th align="center">类型</th><th align="center">占用存储空间</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center">byte</td><td align="center">1字节</td><td align="center">-128~127</td></tr><tr><td align="center">short</td><td align="center">2字节</td><td align="center">-32 768 - 32 767</td></tr><tr><td align="center">int</td><td align="center">4字节</td><td align="center">-2 147 483 648 - 2 147 483 647</td></tr><tr><td align="center">long</td><td align="center">8字节</td><td align="center">-9 223 372 036 854 775 808 - 9 223 372 036 854 775 807</td></tr></tbody></table><p>注意：</p><ol><li>长整型数值有一个后缀L或 l；</li><li>即二进制是以0b/0B开头；八进制是以数字0开头；十六进制是以0X/0x开头，此时的a-f不区分大小写。</li></ol><blockquote><p>浮点数</p></blockquote><table><thead><tr><th align="center">类型</th><th align="center">占用存储空间</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center">float</td><td align="center">4字节</td><td align="center">大约± 3.402 823 47E+38F (有效位数为 6 ~ 7 位）</td></tr><tr><td align="center">double</td><td align="center">8字节</td><td align="center">大约 ± 1.797 693 134 862 315 70E+308 (有效位数为 15 位）</td></tr></tbody></table><p>注意：</p><ol><li>float 类型的数值有一个后缀F或 f (例如，3.14F。) 没有后缀F 的浮点数值（如 3.14 ) 默认为double 类型。</li><li>double表示这种类型的数值精度是float类型的两倍（有人称之为双精度数值)。绝大部分应用程序都采用double类型。</li><li>浮点数值不适用于无法接受舍入误差的金融计算中。 例如，命令 System.out.println( 2.0-1.1 ) 将打印出 0.8999999999999999, 而不是人们想象的0.9。</li></ol><blockquote><p>字符</p></blockquote><table><thead><tr><th align="center">类型</th><th align="center">占用存储空间</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">2字节</td></tr></tbody></table><p><strong>Unicode</strong></p><p>不同的地区有不同的编码机制；于是就产生了问题：一个是对于任意给定的代码值，在不同的编码方案下有可能对应不同的字母；二是采用大字符集的语言其编码长度有可能不同。</p><p>常见的编码机制：美国的 ASCII、 西欧语言中的ISO 8859-1 俄罗斯的 KOI-8、 中国的 GB 18030 和 BIG-5。</p><p>然而，两个字节的代码宽度足以对世界上各种语言的所有字符进行编码， 并有足够的空间留给未来的扩展。</p><p>在设计 Java 时决定采用 16 位的 Unicode 字符集，这样会比使用 8 位字符集的程序设计语言有很大的改进。</p><p><code>在 Java 中，char 类型描述了 UTF-16 编码中的一个代码单兀。我们强烈建议不要在程序中使用 char 类型，除非确实需要处理 UTF-16 代码单元。最好将字符串作为抽象数据类型处理。</code></p><p><strong>常见的字符转义序列</strong></p><table><thead><tr><th align="center">转义序列</th><th align="center">名称</th><th align="center">unicode值</th></tr></thead><tbody><tr><td align="center">\b</td><td align="center">退格</td><td align="center">\u0008</td></tr><tr><td align="center">\t</td><td align="center">制表</td><td align="center">\u0009</td></tr><tr><td align="center">\n</td><td align="center">换行</td><td align="center">\u000a</td></tr><tr><td align="center">\r</td><td align="center">回车</td><td align="center">\u000d</td></tr><tr><td align="center">\ “</td><td align="center">双引号</td><td align="center">\u0022</td></tr><tr><td align="center">\ ‘</td><td align="center">单引号</td><td align="center">\u0027</td></tr><tr><td align="center">\ \</td><td align="center">反斜杠</td><td align="center">\u005c</td></tr></tbody></table><p><strong>常用字符与ASCII代码对照表</strong></p><table><thead><tr><th align="center">ASCII码</th><th align="center">键盘</th><th align="center">ASCII 码</th><th align="center">键盘</th><th align="center">ASCII 码</th><th align="center">键盘</th><th align="center">ASCII 码</th><th align="center">键盘</th></tr></thead><tbody><tr><td align="center">27</td><td align="center">ESC</td><td align="center">32</td><td align="center">SPACE</td><td align="center">33</td><td align="center">!</td><td align="center">34</td><td align="center">“</td></tr><tr><td align="center">35</td><td align="center">#</td><td align="center">36</td><td align="center">$</td><td align="center">37</td><td align="center">%</td><td align="center">38</td><td align="center">&amp;</td></tr><tr><td align="center">39</td><td align="center">‘</td><td align="center">40</td><td align="center">(</td><td align="center">41</td><td align="center">)</td><td align="center">42</td><td align="center">*</td></tr><tr><td align="center">43</td><td align="center">+</td><td align="center">44</td><td align="center">‘</td><td align="center">45</td><td align="center">-</td><td align="center">46</td><td align="center">.</td></tr><tr><td align="center">47</td><td align="center">/</td><td align="center">48</td><td align="center">0</td><td align="center">49</td><td align="center">1</td><td align="center">50</td><td align="center">2</td></tr><tr><td align="center">51</td><td align="center">3</td><td align="center">52</td><td align="center">4</td><td align="center">53</td><td align="center">5</td><td align="center">54</td><td align="center">6</td></tr><tr><td align="center">55</td><td align="center">7</td><td align="center">56</td><td align="center">8</td><td align="center">57</td><td align="center">9</td><td align="center">58</td><td align="center">:</td></tr><tr><td align="center">59</td><td align="center">;</td><td align="center">60</td><td align="center">&lt;</td><td align="center">61</td><td align="center">=</td><td align="center">62</td><td align="center">&gt;</td></tr><tr><td align="center">63</td><td align="center">?</td><td align="center">64</td><td align="center">@</td><td align="center">65</td><td align="center">A</td><td align="center">66</td><td align="center">B</td></tr><tr><td align="center">67</td><td align="center">C</td><td align="center">68</td><td align="center">D</td><td align="center">69</td><td align="center">E</td><td align="center">70</td><td align="center">F</td></tr><tr><td align="center">71</td><td align="center">G</td><td align="center">72</td><td align="center">H</td><td align="center">73</td><td align="center">I</td><td align="center">74</td><td align="center">J</td></tr><tr><td align="center">75</td><td align="center">K</td><td align="center">76</td><td align="center">L</td><td align="center">77</td><td align="center">M</td><td align="center">78</td><td align="center">N</td></tr><tr><td align="center">79</td><td align="center">O</td><td align="center">80</td><td align="center">P</td><td align="center">81</td><td align="center">Q</td><td align="center">82</td><td align="center">R</td></tr><tr><td align="center">83</td><td align="center">S</td><td align="center">84</td><td align="center">T</td><td align="center">85</td><td align="center">U</td><td align="center">86</td><td align="center">V</td></tr><tr><td align="center">87</td><td align="center">W</td><td align="center">88</td><td align="center">X</td><td align="center">89</td><td align="center">Y</td><td align="center">90</td><td align="center">Z</td></tr><tr><td align="center">91</td><td align="center">[</td><td align="center">92</td><td align="center">\</td><td align="center">93</td><td align="center">]</td><td align="center">94</td><td align="center">^</td></tr><tr><td align="center">95</td><td align="center">_</td><td align="center">96</td><td align="center">`</td><td align="center">97</td><td align="center">a</td><td align="center">98</td><td align="center">b</td></tr><tr><td align="center">99</td><td align="center">c</td><td align="center">100</td><td align="center">d</td><td align="center">101</td><td align="center">e</td><td align="center">102</td><td align="center">f</td></tr><tr><td align="center">103</td><td align="center">g</td><td align="center">104</td><td align="center">h</td><td align="center">105</td><td align="center">i</td><td align="center">106</td><td align="center">j</td></tr><tr><td align="center">107</td><td align="center">k</td><td align="center">108</td><td align="center">l</td><td align="center">109</td><td align="center">m</td><td align="center">110</td><td align="center">n</td></tr><tr><td align="center">111</td><td align="center">o</td><td align="center">112</td><td align="center">p</td><td align="center">113</td><td align="center">q</td><td align="center">114</td><td align="center">r</td></tr><tr><td align="center">115</td><td align="center">s</td><td align="center">116</td><td align="center">t</td><td align="center">117</td><td align="center">u</td><td align="center">118</td><td align="center">v</td></tr><tr><td align="center">119</td><td align="center">w</td><td align="center">120</td><td align="center">x</td><td align="center">121</td><td align="center">y</td><td align="center">122</td><td align="center">z</td></tr><tr><td align="center">123</td><td align="center">{</td><td align="center">124</td><td align="center">|</td><td align="center">125</td><td align="center">}</td><td align="center">126</td><td align="center">~</td></tr></tbody></table><blockquote><p> 布尔型</p></blockquote><p>boolean (布尔）类型有两个值：false 和 true, 用来判定逻辑条件 整型值和布尔值之间不能进行相互转换。</p><h2 id="三、注释、关键字与变量"><a href="#三、注释、关键字与变量" class="headerlink" title="三、注释、关键字与变量"></a>三、注释、关键字与变量</h2><h3 id="1-注释"><a href="#1-注释" class="headerlink" title="1. 注释"></a>1. 注释</h3><p>单行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br></pre></td></tr></table></figure><p>多行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>文档注释</p><p>该注释内容可以被JDK提供的工具javadoc所解析，生成一套以网页文件形式体现该程序的说明文档，类似于JDK说明文档；</p><p>通过命令可生成该文档：javadoc  -d  文档名  -author  -version  类名.java；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文档注释</span></span><br><span class="line"><span class="comment"> * javadoc是用于提取注释的工具，输出的是一个HTML文件；</span></span><br><span class="line"><span class="comment"> * 文档标签和其嵌入HTML</span></span><br><span class="line"><span class="comment"> * 独立文档标签是一些以@字符开头的命令，且要置于注释行的最前面；</span></span><br><span class="line"><span class="comment"> * 行内文档标签可以出现在注释的任何地方，也是一@字符开头，但是要扩展花括号内。</span></span><br><span class="line"><span class="comment"> * javadoc只能为public和protected成员进行文档注释。</span></span><br><span class="line"><span class="comment"> * 嵌入HTML</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;标题&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * &lt;ol&gt;</span></span><br><span class="line"><span class="comment"> *   &lt;li&gt;Item one&lt;/li&gt;</span></span><br><span class="line"><span class="comment"> * &lt;/ol&gt;</span></span><br><span class="line"><span class="comment"> * 独立文档注释</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> java.swing.JFrame</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 版本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 作者</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 最早使用的版本</span></span><br><span class="line"><span class="comment"> * 行内文档注释</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> java.util.Date&#125; </span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@docRoot</span> &#125; 该标签产生到文档根目录的相对路径，用于文档树页面的显示超链接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//方法上</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> 参数名  方法说明</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回值描述</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> 对方法的异常进行说明</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-关键字和标识符"><a href="#2-关键字和标识符" class="headerlink" title="2. 关键字和标识符"></a>2. 关键字和标识符</h3><p>特点：关键字中所有的字母都是小写；</p><p>保留字：goto和const，即Java目前尚未使用，但以后版本可能使用；</p><p>标识符：对变量、方法和类等元素命名时的字节序列。</p><blockquote><p>命名规则</p></blockquote><ol><li>可使用26个英文字母的大小写，0-9，_和$组成；</li><li>数字不可以开头；</li><li>不可以使用关键字和保留字，但可以包含关键字和保留字；</li><li>Java中严格区分大小写，长度无限制；</li><li>不能包含空格。</li></ol><blockquote><p>命名规范</p></blockquote><ol><li>包名：多单词组成时，所有字母都都小写；</li><li>类名、接口名：多单词组成时，所有单词的首字母大写；</li><li>变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写；</li><li>常量名：所有字母都大写，多个单词时每个单词用下划线连接。</li></ol><h3 id="3-变量与常量"><a href="#3-变量与常量" class="headerlink" title="3. 变量与常量"></a>3. 变量与常量</h3><p>此时说明的都是局部变量或局部常量，即在一个方法内或一段代码块内声明的变量或者常量，与后面的类属性无法。</p><blockquote><p>变量</p></blockquote><p>在 Java 中，每个变量都有一个类型（ type)。在声明变量时，变量的类型位于变量名之前。</p><p><strong>注意</strong>：声明一个变量之后，必须用赋值语句对变量进行显式初始化， 千万不要使用未初始化的变量。</p><blockquote><p>常量</p></blockquote><p>在 Java 中， 利用关键字 final 指示常量。</p><p>关键字 final 表示这个变量只能被赋值一次。一旦被赋值之后，就不能够再更改了。习惯上，常量名使用全大写。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">double</span> CM_PER_INCH = <span class="number">2.54</span>;</span><br></pre></td></tr></table></figure><h2 id="四、运算符"><a href="#四、运算符" class="headerlink" title="四、运算符"></a>四、运算符</h2><blockquote><p>基本运算符</p></blockquote><p>在 Jav 中，使用算术运算符 +、-、 *、/ 表示加、减、 乘、除运算。 </p><p>当参与 / 运算的两个操作数都是整数时， 表示整数除法；否则， 表示浮点除法。 </p><p>整数的求余操作（有时称为取模) 用 ％ 表示，只有整数类型变量能够进行取余运算。</p><p>通常表达式中出现的最大的数据类型决定了表达式最终结果的数据类型；即如果将一个float值与一个double值相乘，结果就是double。</p><p>可以在赋值中使用二元运算符，这是一种很方便的简写形式。例如， X += 4;等价于：x = x + 4; (一般地， 要把运算符放在 = 号左边，如 *= 或 ％=)。</p><blockquote><p>强制类型转换</p></blockquote><p>经常需要将一种数值类型转换为另一种数值类型。但有些会造成信息丢失。</p><p>从占用存储空间小的向占用存储空间大的转换不会丢失数据类型，反之则会丢失数据类型。</p><p>特殊的</p><ol><li>从int转换为float可能会丢失数据类型；</li><li>从long转换为double可能会丢失数据类型；</li><li>从long转换为float可能会丢失数据类型；</li><li>从int转换位double不会丢失数据类型。</li></ol><p><strong>运算符中的类型转换</strong></p><ol><li>如果两个操作数中有一个是 double 类型， 另一个操作数就会转换为 double 类型。 </li><li>否则，如果其中一个操作数是 float 类型，另一个操作数将会转换为 float 类型。 </li><li>否则， 如果其中一个操作数是 long 类型， 另一个操作数将会转换为 long 类型。 </li><li>否则， 两个操作数都将被转换为 int 类型。</li><li>在char、byte和short中，对这些类型的任何一个进行算术运算，都会获得一个int类型，必须将其显示的类型转换会原来的类型，以将值赋给原本的类型；</li></ol><blockquote><p> 逻辑运算符</p></blockquote><p>==(等于)、!=(不等于) &lt; (小于) 、&gt; (大于)、&lt;=(小于等于）和 &gt;= (大于等于）运算符都是逻辑元素符，其运算的结果都是布尔型。</p><p>&amp;&amp; 和 &amp;(与)：只要有一个操作数为false，结果就为false。</p><p>|| 和 |(或)：只要有一个操作数为true，结果就为true。</p><p>! (非)：对操作为去反，如果操作数为true，表达式结果为false，反之同理。</p><p><strong>三元运算符</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">条件表达式? 结果<span class="number">1</span> : 结果<span class="number">2</span></span><br></pre></td></tr></table></figure><p>根据条件表达式返回结果；如果条件表达式结果为true，则返回结果1，否则返回结果2。</p><p><strong>&amp;&amp; 与&amp;、||与|的区别</strong></p><p>&amp; 称为逻辑与运算符，&amp;&amp; 称为短路与运算符，也可叫逻辑与运算符。</p><p>​    对于&amp;：无论任何情况，&amp;两边的操作数或表达式都会参与计算。</p><p>​    对于&amp;&amp;：当&amp;&amp;左边的操作数为false或左边表达式结果为false时，&amp;&amp;右边的操作数或表达式将不参与计算，此时最终结果都为false。</p><p>​    综上所述，如果逻辑与运算的第一个操作数是false或第一个表达式的结果为false时，对于第二个操作数或表达式是</p><p>​    否进行运算，对最终的结果没有影响，结果肯定是false。推介平时多使用&amp;&amp;，因为它效率更高些。</p><p>&amp;还可以用作位运算符。当&amp;两边操作数或两边表达式的结果不是boolean类型时，&amp;用于按位与运算符的操作。</p><blockquote><p>位运算符</p></blockquote><table><thead><tr><th align="center">运算符</th><th align="center">运算</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">&lt;&lt;</td><td align="center">左移</td><td align="center">3&lt;&lt;2 =&gt;3 * 2 * 2=12</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">右移</td><td align="center">3&gt;&gt;1=&gt;3/2=1；结果为int类型，所以为1。</td></tr><tr><td align="center">&gt;&gt;&gt;</td><td align="center">无符号右移</td><td align="center">3&gt;&gt;&gt;1=&gt;3/2=1</td></tr><tr><td align="center">&amp;</td><td align="center">与运算</td><td align="center">6&amp;3=2</td></tr><tr><td align="center">|</td><td align="center">或运算</td><td align="center">6|3=7</td></tr><tr><td align="center">^</td><td align="center">异或运算</td><td align="center">6^3=5</td></tr><tr><td align="center">~</td><td align="center">取反运算</td><td align="center">~6=-7</td></tr></tbody></table><p>注意：</p><ol><li>如果堆char、byte、short类型的数字进行移位处理，那么在移位进行之前，他们会被转换为int类型，并且得到的结果也是一个int类型。</li><li>对于&amp;、|如果两个操作数或表达式是布尔类型，则进行的是逻辑运算，且如果两个操作数都是表达式都需要进行计算，无论是否影响整个表达式的最终结果。</li><li>所有的位运算都是基于二进制的，比如^运算符，如果对于6和3两个整数，其二进制分别为1010和0011，则异或的结果就是1001，也就是5。</li></ol><blockquote><p>自增与自减</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n++; <span class="comment">// n自增1</span></span><br><span class="line">n--; <span class="comment">// n自减1</span></span><br></pre></td></tr></table></figure><p>实际上， 这些运算符有两种形式；上面介绍的是运算符放在操作数后面的“ 后缀” 形式。</p><p>还有一种“ 前缀” 形式：++n。后缀和前缀形式都会使变量值加 1 或减 1。但用在表达式中时，二者就有区别了。前缀形式会先完成加 1; 而后缀形式会使用变量原来的值。</p><blockquote><p>括号与运算符级别</p></blockquote><p>如果不使用圆括号， 就按照给出的运算符优先级次序进行计算。</p><table><thead><tr><th align="center">优先级</th><th align="center">描述</th><th align="center">运算符</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">括号</td><td align="center">() []</td></tr><tr><td align="center">2</td><td align="center">正负号</td><td align="center">+ -</td></tr><tr><td align="center">3</td><td align="center">自增自减，非</td><td align="center">++  – !</td></tr><tr><td align="center">4</td><td align="center">乘除，取余</td><td align="center">*  /  %</td></tr><tr><td align="center">5</td><td align="center">加减</td><td align="center">+  -</td></tr><tr><td align="center">6</td><td align="center">移位运算</td><td align="center">&lt;&lt;  &gt;&gt;  &gt;&gt;&gt;</td></tr><tr><td align="center">7</td><td align="center">大小关系</td><td align="center">&gt;  &gt;=  &lt; &lt;=</td></tr><tr><td align="center">8</td><td align="center">相等关系</td><td align="center">==  !=</td></tr><tr><td align="center">9</td><td align="center">按位与</td><td align="center">&amp;</td></tr><tr><td align="center">10</td><td align="center">按位异或</td><td align="center">^</td></tr><tr><td align="center">11</td><td align="center">按位或</td><td align="center">|</td></tr><tr><td align="center">12</td><td align="center">逻辑与</td><td align="center">&amp;&amp;</td></tr><tr><td align="center">13</td><td align="center">逻辑或</td><td align="center">||</td></tr><tr><td align="center">14</td><td align="center">条件运算</td><td align="center">?:</td></tr><tr><td align="center">15</td><td align="center">赋值运算</td><td align="center">= += -= *= /= %=</td></tr><tr><td align="center">16</td><td align="center">位赋值运算</td><td align="center">&amp;= |= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;=</td></tr></tbody></table><h2 id="五、控制流程"><a href="#五、控制流程" class="headerlink" title="五、控制流程"></a>五、控制流程</h2><h3 id="1-条件语句"><a href="#1-条件语句" class="headerlink" title="1.  条件语句"></a>1.  条件语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(condition)&#123;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(condition) &#123;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与绝大多数程序设计语言一样， Java 常常希望在某个条件为真时执行多条语句。</p><p>注意：在上述中，condition可以是表达式或变量，如果是变量则必须是boolean类型，如果是表达式，表达式结果也必须是boolean类型。后面的循环语句的判断条件也是这种要求。</p><h3 id="2-循环语句"><a href="#2-循环语句" class="headerlink" title="2. 循环语句"></a>2. 循环语句</h3><blockquote><p>while</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>满足条件进入循环，直到不满足条件退出循环。</p><blockquote><p>do…while</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">while</span>(condition)</span><br></pre></td></tr></table></figure><p>满足条件，继续循环继续，否则退出循环，此种循环结构执行执行一次循环体。</p><blockquote><p>for</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行步骤：先执行int i = 0且只执行一次；然后执行i&lt;10，结果为true时进入循环体；循环体执行完毕执行i++；</p><h3 id="3-switch语句"><a href="#3-switch语句" class="headerlink" title="3. switch语句"></a>3. switch语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(n)&#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">1</span>:执行语句;<span class="keyword">break</span>; </span><br><span class="line">   <span class="keyword">case</span> <span class="number">2</span>:....</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">default</span>:执行语句;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>case 标签可以是： </p><ol><li>类型为 char、byte、 short 或 int 的常量表达式。 </li><li>枚举常量。 </li><li>从 Java SE 7开始， case 标签还可以是字符串字面量。</li></ol><p>说明：</p><ol><li>当n与某个case匹配是，执行该条件语句。</li><li>case的执行语句执行完毕后，如果没有break，则会继续执行下一个case，直到break，或者switch语句执行完毕。</li><li>当所有的case都不匹配时，汇之星default部分。</li></ol><h3 id="4-break和continue"><a href="#4-break和continue" class="headerlink" title="4. break和continue"></a>4. break和continue</h3><p>尽管 Java 的设计者将 goto 作为保留字，但实际上并没有打算在语言中使用它。</p><p>Java语言中增加了一条带标签的 break，用于中断流程控制。</p><p>例如：在无限循环中，当if条件满足时则退出循环。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (condition) </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带标签的break；</p><p>在多重循环中，可通过为循环体设置标签，然后满足一定条件时，直接退出执行的循环体；比如下面当if条件成立，就执行退出外循环了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">outter: </span><br><span class="line"><span class="keyword">while</span> ()  <span class="comment">//外循环</span></span><br><span class="line">    <span class="keyword">for</span> ()&#123; <span class="comment">//内循环；</span></span><br><span class="line">    <span class="keyword">if</span> (condition)</span><br><span class="line">      <span class="keyword">break</span> outter; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一个 continue 语句。与 break 语句一样， 它将中断正常的控制流程。continue语句将控制转移到最内层循环的首部。</p><p>即退出本次循环，继续进行下一次循环。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">while</span> (sum &lt; goal ) &#123;</span><br><span class="line">    System.out.print(<span class="string">&quot;Enter a number: &quot;</span>); </span><br><span class="line">    n = in.nextlnt();</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>) <span class="comment">//如果输入的只为0，退出本次循环，继续进行下一次循环。</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    sum += n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、数组"><a href="#六、数组" class="headerlink" title="六、数组"></a>六、数组</h2><p><strong>概述</strong></p><p>数组是一种数据结构， 用来存储同一类型值的集合。通过一个整型下标可以访问数组中的每一个值。</p><p>在声明数组变量时， 需要指出数组类型 （ 数据元素类型紧跟 []) 和数组变量的名字。</p><p>数组的长度是固定的。</p><p>数组标识符其实只是一个引用，指向在堆中创建的一个真实对象，这个对象用以保存指向其他对象的引用。</p><p><strong>声明数组</strong>：</p><ul><li>一位数组的声明方式；int[]  arr=new  int[]{}，int[]   arr=new  int[10]；其中方括号也可放在变量名后面；</li><li>还可以这样声明int[] arr={1,3, }，这种初始化方式只能使用在数组定义之处；</li><li>二维数组的声明；int[] arr[]=new int [ 3 ] [ ]；外层元素的初始值为null，内层元素的值不 能调用，否则报错；</li><li>注意数组的变量名直接赋值，是把数组的首地址赋给了另一个数组，当另一个数组发生改变时，这个数组也会发生改变。</li><li>使用花括号初始化数组，初始化列表的最后一个逗号是可选的；即new int{1,23,4,}也是可以的；</li></ul><p>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] array = &#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span> &#125;;</span><br></pre></td></tr></table></figure><p><strong>多维数组</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] array = <span class="keyword">new</span> <span class="keyword">int</span>[size] [size];<span class="comment">//声明二维数组，默认值是0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[][] array = &#123; &#123;<span class="number">16</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">13</span>&#125;， &#123;<span class="number">5</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">8</span>&#125;, (<span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>&#125;, &#123;<span class="number">4</span>, <span class="number">15</span>, <span class="number">14</span>, <span class="number">1</span>&#125; &#125;;<span class="comment">//声明二维数组</span></span><br></pre></td></tr></table></figure><p>说明：二维数组与一维数组并没有太多的不同，可以把二维数据理解为存放若干个一维数组的一维数组。</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span>[] b = &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">int</span>[] c = &#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[][] array = &#123;a,b,c&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;array.length;i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;array[i].length;j++) &#123;</span><br><span class="line">        System.out.print(array[i][j]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多维的数组思想类似，不过基本上用不到。</p><h2 id="七、结束语"><a href="#七、结束语" class="headerlink" title="七、结束语"></a>七、结束语</h2><p>本篇文章主要是对Java基础语法的一个小总结，可能不是很全面，但也是自己学习Java的总结。</p><p><strong>参考书籍</strong></p><p>Java核心技术：<a href="https://book.douban.com/subject/26880667/">https://book.douban.com/subject/26880667/</a></p>]]></content>
    
    
    <summary type="html">Java基本语法的总结和回顾，从数据类型、运算符到流程控制相关的知识点汇众，既是总结，亦是回顾。</summary>
    
    
    
    <category term="Java" scheme="https://amazingdl.github.io/categories/Java/"/>
    
    
    <category term="Java SE" scheme="https://amazingdl.github.io/tags/Java-SE/"/>
    
  </entry>
  
</feed>
